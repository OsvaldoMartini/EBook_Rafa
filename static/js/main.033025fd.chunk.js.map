{"version":3,"sources":["components/ChatBoard/Chat/Chat.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/controlls/CreateButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/hocs/requireAuth.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/profileReducer.js","reducers/profileBacklogReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","actions/backlogActions.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/ProjectBacklog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","actions/profileActions.js","components/Profile/ProfileItem.js","components/Profile/AllProfiles.js","components/Profile/AddProfile.js","components/Profile/UpdateProfile.js","actions/profileBacklogActions.js","components/CVBoard/ProfileTasks/ProfileTask.js","components/CVBoard/CVBacklog.js","components/CVBoard/templates/TemplateDossie.js","components/CVBoard/CVBoard.js","components/CVBoard/ProfileTasks/TasksForms/EducationForm.js","components/CVBoard/ProfileTasks/TasksForms/SkillsForm.js","components/CVBoard/ProfileTasks/TasksForms/LanguageForm.js","components/CVBoard/ProfileTasks/TasksForms/ClientProjectForm.js","components/CVBoard/ProfileTasks/AddProfileTask.js","components/CVBoard/ProfileTasks/UpdateProfileTask.js","components/Layout/Home.js","components/Profile/InfoProfilePage.js","components/AutomationBoard/AutomationTasks/AutomationTask.js","components/controlls/Button.js","components/controlls/Message.js","components/AutomationBoard/AutomationBacklog.js","components/AutomationBoard/AutomationBoard.js","components/controlls/FloatingWindowControl.js","components/controlls/FloatingWindowHeader.js","components/controlls/FloatingWindowContent.js","components/controlls/FloatingWindowStatusBar.js","components/controlls/FloatingWindow.js","components/AutomationBoard/AutomationGridBacklog.js","components/AutomationBoard/AutomationGridBoard.js","components/AutomationBoard/AutomationTasks/AddAutomationTask.js","components/AutomationBoard/AutomationTasks/UpdateAutomationTask.js","components/ChatBoard/Join/Join.js","components/TimerTest/Timer.js","components/TimerTest/Pomodoro.js","components/controlls/DraggableSamples.js","App.js","index.js"],"names":["socket","GET_ERRORS","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateButton","Fragment","link","cssClass","caption","React","Dashboard","security","validToken","getProjects","localStorage","removeItem","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","setJWTTokenCandidate","login","LoginRequest","setItem","decoded","jwt_decode","console","log","profileIdentifier","username","password","message","location","href","logout","Header","headerLinks","user","admin","userIsAuthenticated","userIsAuthenticatedAdmin","fullName","userIsNotAuthenticated","data-toggle","data-target","ChildComponent","RequireAuth","match","params","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","requireAuth","initialState","project_tasks","project_task","automation_tasks","automation_task","all_operations","currentQuoteIndex","quote","quotes","booleanActionPayload","profiles","profile","profile_tasks","profile_task","combineReducers","action","filter","backlog","projectSequence","i","status","label","length","summary","typeProfile","profileBacklog","profileSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","getProject","updateProject","disabled","getAllOperationByBackLog","backlog_id","getAutomationTaskByOperation","operationName","ProjectTask","pt_id","deleteProjectTask","priorityString","priorityClass","priority","acceptanceCriteria","ProjectBacklog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","ProjectBoard","getBacklogProjectTask","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","confirmPassword","newUser","createNewUser","loginRequest","Login","autoFocus","component","otherProps","render","createProfile","ProfileItem","deleteProfile","candidateEmail","style","pointerEvents","color","AllProfiles","getProfiles","AddProfile","newProfile","UpdateProfile","getProfile","updateProfile","linkCv","addProfileTask","profile_backlog_id","tokenMessage","profileNotfound","updateProfileTask","ProfileTask","deleteProfileTask","responsibility","sort","b","respOrder","taskType","skillYears","educYear","levelLanguage","company","readOnly","field_Top","skillCompetence","educOrganization","language","position","generalContext","field_Header","skillDescription","educAwarded","responsability","index","respFunction","respTask","technicalEnviroment","field_Body","updateAlgorithm","CVBacklog","profile_tasks_prop","task_type_prop","listTasks","experiences","isCurrent","title","startDate","month","year","endDate","education","degree","fieldOfStudy","notes","schoolName","skills","achievements","issuer","DocumentCreator","educations","achivements","document","Document","addParagraph","Paragraph","createContactInfo","createHeading","createInstitutionHeader","createRoleText","splitParagraphIntoBullets","forEach","bulletPoint","createBullet","createPositionDateText","createSubHeading","createSkillList","createAchivementsList","achievementParagraph","createInterests","center","phoneNumber","profileUrl","email","paragraph","contactInfo","TextRun","address","break","addRun","text","heading1","thematicBreak","heading2","institutionName","dateText","maxRightTabStop","institution","bold","date","tab","roleText","bullet","skillConcat","skill","join","arr","achievement","interests","split","startDateText","getMonthFromInt","endDateText","GenerateCV","create","CVBoard","otherProfile","technologyArea","domains","certifications","tools","trainings","methodologies","others","faseProfile","handleEnter","doc","Packer","toBlob","then","blob","saveAs","event","keyCode","form","Array","prototype","indexOf","call","elements","focus","getProfileByLink","getProfileBacklog","prevProps","updateCV","taskType_To_Filter","profileNotFound","algorithmTask","bottom","right","width","zIndex","onGenerateCv","onBlur","_onBlur","onFocus","_onFocus","children","onKeyDown","ref","marginTop","fontSize","marginBottom","height","_handleButtonClick","jwtToken","jwtTokenCandidate","decoded_jwtToken","exp","Date","now","currentTime","error","EducationForm","onChangeText","test","toString","typeForm","UpdateProfileTask","mobile","min","max","getFullYear","SkillsForm","LanguagesForm","ClientProjectForm","months","prompt","answer","part","addStack","datesProject","ControlLabel","updateResponsabilityPart","reponsibility","addResponsability","AddProfileTask","LanguageForm","taskComponent","totalYears","getProfileTask","Home","InfoProfilePage","AutomationTask","deleteAutomationTask","Button","toggle","Message","isOpen","prevState","clientControl","AutomationBacklog","client","initRsocketWebSocket","addErrorMessage","reloadMessages","CloseOpenRSockets","automation_tasks_prop","updateRSocketAutomationTask","undefined","item","close","nameOper","RSocketClient","serializers","JsonSerializer","metadata","IdentitySerializer","setup","keepAlive","lifetime","dataMimeType","metadataMimeType","transport","RSocketWebSocketClient","url","subscribe","onComplete","requestStream","String","fromCharCode","onError","onNext","onSubscribe","subscription","request","cancel","prefix","AutomationBoard","handleChange","selectedOption","JSON","stringify","operations","handleStartRefresh","intervalLoop","setInterval","onReloadDataClick","capitalCase","options","clearable","selectedOptionLocal","parse","getItem","FloatingWindowControl","expandWindow","compressWindow","FloatingWindowHeader","FloatingWindowContent","FloatingWindowStatusBar","FloatingWindow","AutomationGridBacklog","operation_name","tokenTag","expectedObject","generateExpectedFields","fieldName","valueResponse","disputeAutomationTask","RenderHeaderGrid","RenderDataGrid","allTestCases","orderTest","spanStatusEmpty","statusAlgorithm","firstAutoTask","header","pascalCase","renderTableHeader","testCases","testCaseName","update_At","bodyResponse","expectedValue","succeeded","statusPriority","getParsedDate","getParsedTime","onGenerateExpectedClick","onDisputeClick","axiosConfig","disputeObj","catch","err","AutomationGridBoard","count","clearInterval","AddAutomationTask","addAutomationTask","UpdateAutomationTask","getAutomationTask","updateAutomationTask","Chat","useState","setName","room","setRoom","setUsers","messages","setMessages","ENDPOINT","useEffect","queryString","search","io","emit","alert","on","users","off","timer","setTimeout","clearTimeout","Timer","seconds","setSeconds","isActive","setIsActive","interval","BreakLabel","SessionLabel","Pomodoro","session","handleClickBreakDecrement","handleClickBreakIncrement","handleClickSessionDecrement","handleClickSessionIncrement","handleStartStop","Math","floor","handleReset","DraggableSample","activeDrags","deltaPosition","x","y","controlledPosition","handleDrag","ui","deltaX","deltaY","onStart","onStop","adjustXPos","stopPropagation","adjustYPos","onControlledDrag","onControlledDragStop","dragHandlers","axis","onDrag","toFixed","handle","grid","bounds","top","left","overflow","padding","defaultPosition","positionOffset","App","exact","path","Join","DraggableSamples","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.033025fd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\n\r\n// import TextContainer from '../TextContainer/TextContainer';\r\n// import Messages from '../Messages/Messages';\r\n// import InfoBar from '../InfoBar/InfoBar';\r\n// import Input from '../Input/Input';\r\n\r\nimport './Chat.css';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\r\n\r\n  useEffect(() => {\r\n    //const { name, room } = queryString.parse(location.search);\r\n    const data = queryString.parse(location.search);\r\n\r\n    console.log(location.search)\r\n    console.log(data)\r\n    \r\n    socket = io(ENDPOINT);\r\n\r\n    setRoom(room);\r\n    setName(name)\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [ENDPOINT, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on('message', (message) => {\r\n      setMessages([...messages, message ]);\r\n    });\r\n\r\n    socket.on('roomData', ({ users }) => {\r\n      setUsers(users);\r\n    })\r\n\r\n    return () => {\r\n      socket.emit('disconnect');\r\n\r\n      socket.off();\r\n    }\r\n  }, [messages])\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n\r\n  return (\r\n   <div>Chat</div>\r\n    // <div className=\"outerContainer\">\r\n    //   <div className=\"container\">\r\n    //       <InfoBar room={room} />\r\n    //       <Messages messages={messages} name={name} />\r\n    //       <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n    //   </div>\r\n    //   <TextContainer users={users}/>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG_PROJECT_TASK = 'GET_BACKLOG_PROJECT_TASK';\r\nexport const GET_BACKLOG_AUTOMATION_TASK =\r\n  'GET_BACKLOG_AUTOMATION_TASK';\r\n\r\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\r\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\r\n\r\nexport const GET_AUTOMATION_TASK = 'GET_AUTOMATION_TASK';\r\nexport const DELETE_AUTOMATION_TASK = 'DELETE_AUTOMATION_TASK';\r\nexport const DISPUTE_AUTOMATION_TASK = 'DISPUTE_AUTOMATION_TASK';\r\nexport const GET_AUTOMATION_ALL_OPERATIONS =\r\n  'GET_AUTOMATION_ALL_OPERATIONS';\r\nexport const GET_AUTOMATION_BY_OPERATIONS =\r\n  'GET_AUTOMATION_BY_OPERATIONS';\r\nexport const UPDATE_STATUS_RSOCKET = 'UPDATE_STATUS_RSOCKET';\r\nexport const CHANGE_QUOTE = 'CHANGE_QUOTE';\r\n\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n\r\n//Types for PROFILE ACTIONS\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const DELETE_PROFILE = 'DELETE_PROFILE';\r\n\r\n//Types for PROFILE BACKLOG ACTIONS\r\nexport const GET_PROFILE_BACKLOG = 'GET_PROFILE_BACKLOG';\r\nexport const GET_PROFILE_TASK = 'GET_PROFILE_TASK';\r\nexport const DELETE_PROFILE_TASK = 'DELETE_PROFILE_TASK';\r\n\r\n//Task Types to Reder\r\nexport const TASK_TYPE_SKILSS = 'skill';\r\nexport const TASK_TYPE_EDUC = 'educ';\r\nexport const TASK_TYPE_LANG = 'lang';\r\nexport const TASK_TYPE_CLI_PRJ = 'cliPrj';\r\n\r\n// Setting Direct Redux\r\n\r\nexport const SET_PROFILE_STAGED = 'SET_PROFILE_STAGED';\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n\r\n// export const setdeleteProject = id => async dispatch => {\r\n//   if (\r\n//     window.confirm(\r\n//       \"Are you sure? This will delete the project and all the data related to it\"\r\n//     )\r\n//   ) {\r\n//     await axios.delete(`/api/project/${id}`);\r\n//     dispatch({\r\n//       type: DELETE_PROJECT,\r\n//       payload: id\r\n//     });\r\n//   }\r\n// };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2 d-none d-lg-block\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h4>{project.projectName}</h4>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            {/* <div className=\"col-md-4 d-none d-lg-block\"> */}\r\n            <div className=\"col-md-4 d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/automationBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Automation Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass CreateButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Link to={this.props.link} className={this.props.cssClass}>\r\n          {this.props.caption}\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateButton from \"../components/controlls/CreateButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.getProjects();\r\n    } else {\r\n      this.props.history.push(`/`);\r\n    }\r\n    localStorage.removeItem(\"selectedOption\");\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateButton\r\n                link=\"/addProject\"\r\n                caption=\"Create a Project\"\r\n                cssClass=\"btn btn-lg btn-info\"\r\n              />\r\n              <br />\r\n              <hr />\r\n              {projects &&\r\n                projects.map(project => (\r\n                  <ProjectItem key={project.id} project={project} />\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nexport const setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport const setJWTTokenCandidate = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Candidate\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Candidate\"];\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport {\r\n  setJWTToken,\r\n  setJWTTokenCandidate\r\n} from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    const loginRequest = {\r\n      username: newUser.username,\r\n      password: newUser.password\r\n    };\r\n    //history.push(\"/login\");\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: loginRequest\r\n    });\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest, history) => async dispatch => {\r\n  // post => Login Request\r\n  // extract token from res.data\r\n  // store the token in the localstorage\r\n  // set our token in header ***\r\n  // decode token onn React\r\n  // dispatch to our securityReducer\r\n\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n\r\n    if (token && typeof token !== \"undefined\") {\r\n      localStorage.removeItem(\"jwtTokenCandidate\");\r\n\r\n      // store the token in the localStorage\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // set our token in header ***\r\n      setJWTToken(token);\r\n      // decode token on React\r\n      const decoded = jwt_decode(token);\r\n      console.log(decoded);\r\n\r\n      //dispatch to our securityReducer\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n      });\r\n\r\n      if (decoded.profileIdentifier) {\r\n        // history.push(`/editcv/${decoded.profileIdentifier}`);\r\n        history.push(\"/dashboard\");\r\n      }\r\n\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n      });\r\n    } else {\r\n      const err = {\r\n        username: \"Invalid Username\",\r\n        password: \"Invalid Password\"\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      });\r\n    }\r\n  } catch (err) {\r\n    const { username } = err.response.data;\r\n    if (username) {\r\n      //history.push(`/infoPage/${LoginRequest.username}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    } else if (err.message && LoginRequest.username) {\r\n      //err.response.data.push({ message: err.message });\r\n      window.location.href = `/infoPage/${LoginRequest.username}`;\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      });\r\n    } else if (err.message) {\r\n      //err.response.data.push({ message: err.message });\r\n      window.location.href = `/infoPage/${err.message}`;\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  localStorage.removeItem(\"jwtTokenCandidate\");\r\n  setJWTToken(false);\r\n  setJWTTokenCandidate(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user, admin } = this.props.security;\r\n    //const { profileIdentifier } = user;\r\n    const userIsAuthenticatedAdmin = admin => {\r\n      if (admin) {\r\n        return (\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/profiles\">\r\n                Profiles CV\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/dashboard\">\r\n                Dashboard\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/automation\">\r\n                Data flow\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/joinChat\">\r\n                Join To Chat\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/timer\">\r\n                Timer\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/pomodoro\">\r\n                Pomodoro\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/draggable\">\r\n                Draggable\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        {userIsAuthenticatedAdmin(admin)}\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to={`/editcv/${profileIdentifier}`}> */}\r\n          <Link className=\"nav-link\" to=\"/dashboard\">\r\n \t\t\t       <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Automation Test Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default ChildComponent => {\r\n  class RequireAuth extends Component {\r\n    render() {\r\n      // In Case to Have any Id\r\n      // Return to the Caller\r\n      const { id } = this.props.match.params || false;\r\n      if (id) {\r\n        return <ChildComponent {...this.props} />;\r\n      }\r\n\r\n      const { validToken } = this.props.security || false;\r\n      switch (validToken) {\r\n        case false:\r\n          return <Redirect to=\"/\" />;\r\n        case null:\r\n          return <div>Loading... </div>;\r\n        default:\r\n          return <ChildComponent {...this.props} />;\r\n      }\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    security: state.security\r\n  });\r\n\r\n  // We are recording the user's authentication status on the auth piece of state\r\n  return connect(mapStateToProps)(RequireAuth);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // Life Cycle Hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    //this.setState({ projectName: e.target.value });\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    console.log(newProject);\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Constraint\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(requireAuth(AddProject));\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG_PROJECT_TASK,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  GET_BACKLOG_AUTOMATION_TASK,\r\n  GET_AUTOMATION_TASK,\r\n  DELETE_AUTOMATION_TASK,\r\n  GET_AUTOMATION_ALL_OPERATIONS,\r\n  GET_AUTOMATION_BY_OPERATIONS,\r\n  CHANGE_QUOTE,\r\n  UPDATE_STATUS_RSOCKET,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n  automation_tasks: [],\r\n  automation_task: {},\r\n  all_operations: {},\r\n  currentQuoteIndex: 0,\r\n  quote: null,\r\n};\r\n\r\nconst quotes = [\r\n  'It’s not who I am underneath, but what I do that defines me.',\r\n  'Everything’s impossible until somebody does it.',\r\n  'Why do we fall? So that we can learn to pick ourselves back up.',\r\n  'Our greatest glory is not in ever falling, but in rising every time we fall.',\r\n  'If you kill a killer, the number of killers in the room remains the same.',\r\n  'Sometimes the truth isn’t good enough, sometimes people need more.',\r\n  'A hero can be anyone, even a man doing something as simple as reassuring putting a coat on a young boy’s shoulders.',\r\n];\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) =>\r\n            project_task.projectSequence !== action.payload,\r\n        ),\r\n      };\r\n\r\n    case GET_BACKLOG_AUTOMATION_TASK:\r\n      return {\r\n        ...state,\r\n        automation_tasks: action.payload,\r\n      };\r\n\r\n    case GET_AUTOMATION_TASK:\r\n      return {\r\n        ...state,\r\n        automation_task: action.payload,\r\n      };\r\n\r\n    case DELETE_AUTOMATION_TASK:\r\n      return {\r\n        ...state,\r\n        automation_tasks: state.automation_tasks.filter(\r\n          (automation_task) =>\r\n            automation_task.projectSequence !== action.payload,\r\n        ),\r\n      };\r\n\r\n    case UPDATE_STATUS_RSOCKET:\r\n      // For Here I will Update Only the Status\r\n      // For the AutomationBackLog\r\n      return {\r\n        ...state,\r\n        automation_tasks: state.automation_tasks.map(\r\n          (automation_task, i) =>\r\n            automation_task.projectSequence ===\r\n              action.payload.projectSequence &&\r\n            automation_task.status !== action.payload.status\r\n              ? { ...automation_task, status: action.payload.status }\r\n              : automation_task,\r\n        ),\r\n      };\r\n\r\n    case GET_AUTOMATION_ALL_OPERATIONS:\r\n      return {\r\n        ...state,\r\n        all_operations: action.payload.map((key) => {\r\n          return { value: key[0], label: key[1] };\r\n        }),\r\n      };\r\n\r\n    case GET_AUTOMATION_BY_OPERATIONS:\r\n      return {\r\n        ...state,\r\n        automation_tasks: action.payload,\r\n      };\r\n\r\n    case CHANGE_QUOTE:\r\n      let currentQuoteIndex = state.currentQuoteIndex + 1;\r\n      currentQuoteIndex =\r\n        currentQuoteIndex === quotes.length ? 0 : currentQuoteIndex;\r\n      return {\r\n        currentQuoteIndex,\r\n        quote: quotes[currentQuoteIndex],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        admin: true,\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILES,\r\n  GET_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_PROFILE_STAGED\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profiles: [],\r\n  profile: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: action.payload\r\n      };\r\n\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload\r\n      };\r\n\r\n    case DELETE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profiles: state.profiles.filter(\r\n          profile => profile.profileIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    case SET_PROFILE_STAGED:\r\n      console.log(action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        //profileStaged: action.payload\r\n        profile: {\r\n          ...state.profile,\r\n          summary: action.payload.summary,\r\n          typeProfile: action.payload.typeProfile\r\n    \t  //technologyArea: action.payload.technologyArea\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE_BACKLOG,\r\n  GET_PROFILE_TASK,\r\n  DELETE_PROFILE_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile_tasks: [],\r\n  profile_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROFILE_BACKLOG:\r\n      return {\r\n        ...state,\r\n        profile_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROFILE_TASK:\r\n      return {\r\n        ...state,\r\n        profile_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROFILE_TASK:\r\n      return {\r\n        ...state,\r\n        profile_tasks: state.profile_tasks.filter(\r\n          profile_task => profile_task.profileSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport profileBacklogReducer from \"./profileBacklogReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n  profile: profileReducer,\r\n  profileBacklog: profileBacklogReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.projectName}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.start_date}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.end_date}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(requireAuth(UpdateProject));\r\n","import axios from 'axios';\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG_PROJECT_TASK,\r\n  GET_BACKLOG_AUTOMATION_TASK,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  GET_AUTOMATION_TASK,\r\n  DELETE_AUTOMATION_TASK,\r\n  DISPUTE_AUTOMATION_TASK,\r\n  GET_AUTOMATION_ALL_OPERATIONS,\r\n  GET_AUTOMATION_BY_OPERATIONS,\r\n  UPDATE_STATUS_RSOCKET,\r\n} from './types';\r\n\r\nexport const getBacklogProjectTask = (backlog_id) => async (\r\n  dispatch,\r\n) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/backlog/projectTask/${backlog_id}`,\r\n    );\r\n    dispatch({\r\n      type: GET_BACKLOG_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history,\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\r\n      `/api/backlog/projectTask/${backlog_id}`,\r\n      project_task,\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch,\r\n) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/backlog/projectTask/${backlog_id}/${pt_id}`,\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    history.push('/dashboard');\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history,\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(\r\n      `/api/backlog/projectTask/${backlog_id}/${pt_id}`,\r\n      project_task,\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (\r\n  dispatch,\r\n) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`,\r\n    )\r\n  ) {\r\n    await axios.delete(\r\n      `/api/backlog/projectTask/${backlog_id}/${pt_id}`,\r\n    );\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllOperationByBackLog = (backlog_id) => async (\r\n  dispatch,\r\n) => {\r\n  try {\r\n    const res = await axios.get(`/api/operations/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_AUTOMATION_ALL_OPERATIONS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (err.response && err.response.data) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const getAutomationTaskByOperation = (\r\n  backlog_id,\r\n  operationName,\r\n) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/operations/testCasesByOperation/${backlog_id}/${operationName}`,\r\n    );\r\n    if (res.data) {\r\n      dispatch({\r\n        type: GET_AUTOMATION_BY_OPERATIONS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      res.data = [];\r\n      dispatch({\r\n        type: GET_AUTOMATION_BY_OPERATIONS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (err.response && err.response.data) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const getBacklogAutomationTask = (backlog_id) => async (\r\n  dispatch,\r\n) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/backlog/automationTask/${backlog_id}`,\r\n    );\r\n    dispatch({\r\n      type: GET_BACKLOG_AUTOMATION_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addAutomationTask = (\r\n  backlog_id,\r\n  automation_task,\r\n  history,\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\r\n      `/api/backlog/automationTask/${backlog_id}`,\r\n      automation_task,\r\n    );\r\n    history.push(`/automationBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAutomationTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history,\r\n) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/backlog/automationTask/${backlog_id}/${pt_id}`,\r\n    );\r\n    dispatch({\r\n      type: GET_AUTOMATION_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    history.push('/dashboard');\r\n  }\r\n};\r\n\r\nexport const updateAutomationTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  automation_task,\r\n  history,\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(\r\n      `/api/backlog/automationTask/${backlog_id}/${pt_id}`,\r\n      automation_task,\r\n    );\r\n    history.push(`/automationBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteAutomationTask = (backlog_id, pt_id) => async (\r\n  dispatch,\r\n) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting automation task ${pt_id}, this action cannot be undone`,\r\n    )\r\n  ) {\r\n    await axios.delete(\r\n      `/api/backlog/automationTask/${backlog_id}/${pt_id}`,\r\n    );\r\n    dispatch({\r\n      type: DELETE_AUTOMATION_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n\r\nexport const disputeAutomationTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  operation_name,\r\n  tokenTag,\r\n  fieldName,\r\n  valueResponse,\r\n) => async (dispatch) => {\r\n  // if (\r\n  //   window.confirm(\r\n  //     `You are deleting automation task ${pt_id}, this action cannot be undone`\r\n  //   )\r\n  // ) {\r\n\r\n  const disputeObj = {};\r\n  let axiosConfig = {\r\n    headers: {\r\n      //'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Headers': 'Content-Type',\r\n      'Access-Control-Allow-Methods': 'POST',\r\n    },\r\n  };\r\n  disputeObj[\r\n    `#ExpectedToken#.${tokenTag}`\r\n  ] = `${fieldName}.${valueResponse}`;\r\n\r\n  await axios\r\n    .post(\r\n      `/v1/gathering/${operation_name}?executeDataBinarioTask=true`,\r\n      JSON.stringify(disputeObj),\r\n      axiosConfig,\r\n    )\r\n    .then((res) => console.log(res))\r\n    .catch((err) => console.log('Login: ', err));\r\n\r\n  await axios.get(\r\n    `/api/backlog/disputeAutomationTask/${backlog_id}/${pt_id}`,\r\n  );\r\n\r\n  dispatch({\r\n    type: DISPUTE_AUTOMATION_TASK,\r\n    payload: pt_id,\r\n  });\r\n\r\n  // }\r\n};\r\n\r\nexport const generateExpectedFields = (\r\n  operation_name,\r\n  expectedObject,\r\n) => async (dispatch) => {\r\n  // if (\r\n  //   window.confirm(\r\n  //     `You are deleting automation task ${pt_id}, this action cannot be undone`\r\n  //   )\r\n  // ) {\r\n\r\n  let axiosConfig = {\r\n    headers: {\r\n      //'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Headers': 'Content-Type',\r\n      'Access-Control-Allow-Methods': 'POST',\r\n    },\r\n  };\r\n\r\n  // Format\r\n  // expectedObject[`#ExpectedToken#.${tokenTag}`] = `${fieldName}.${valueResponse}`;\r\n  // This It Create and Calls RabbitMQ Tasks\r\n  await axios\r\n    .post(\r\n      `/v1/gathering/${operation_name}?executeDataBinarioTask=true`,\r\n      JSON.stringify(expectedObject),\r\n      axiosConfig,\r\n    )\r\n    .then((res) => console.log(res))\r\n    .catch((err) => console.log('Login: ', err));\r\n  // }\r\n};\r\n\r\nexport const updateRSocketAutomationTask = (data) => async (\r\n  dispatch,\r\n) => {\r\n  dispatch({\r\n    type: UPDATE_STATUS_RSOCKET,\r\n    payload: data,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass ProjectBacklog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectBacklog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectBacklog from \"./ProjectBacklog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklogProjectTask } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklogProjectTask(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER CHECK\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <ProjectBacklog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklogProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklogProjectTask }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Identifier: {this.state.projectIdentifier}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/Home\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n\t\t\t\t{/* <h1 className=\"display-3 mb-4\">CV Creator</h1> */}\r\n        {/* <p className=\"lead\">Create your account to join</p> */}\r\n\t\t\t\t<h1 className=\"display-3 mb-4\">\r\n                  Parabéns pela aquisição do e-book, você o receberá por e-mail em breve. Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects / automation tests or start\r\n                  your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser, login } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n//import store from \"../../store\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n      security: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      //this.props.history.push(`/editcv/${this.state.profileIdentifier}`);\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors && nextProps.errors !== this.props.errors) {\r\n      const { user } = nextProps.security;\r\n      if (\r\n        user.username &&\r\n        nextProps.security.user.username !== this.props.security.user.username\r\n      ) {\r\n        this.props.login(user, this.props.history);\r\n      } else {\r\n        this.setState({ errors: nextProps.errors });\r\n      }\r\n    } else {\r\n      //store.dispatch(logout());\r\n      window.location.href = \"/\";\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Create\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser, login }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      // this.props.history.push(`/editcv/${this.state.profileIdentifier}`);\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      console.log(\"Login validToken-WillReceiveProps Called times\");\r\n      this.props.history.push(\"/home\");\r\n    }\r\n\r\n    if (nextProps.errors && nextProps.errors !== this.props.errors) {\r\n      console.log(\"Login nextProps.errors-WillReceiveProps Called times\");\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    id=\"txtUsername\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                    autoFocus={true}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    id=\"txtPassword\"\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  id=\"btnSubmit\"\r\n                  type=\"submit\"\r\n                  value=\"Login\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROFILES,\r\n  GET_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_PROFILE_STAGED\r\n} from \"./types\";\r\nimport { setJWTTokenCandidate } from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createProfile = (profile, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/profile\", profile);\r\n    history.push(\"/profiles\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    history.push(`/infoPage/${profile.profileIdentifier}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfiles = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/all\");\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n\r\n    // const jwtToken = localStorage.jwtToken;\r\n    // if (jwtToken) {\r\n    //   const decoded = jwt_decode(jwtToken);\r\n\r\n    //   //dispatch to our securityReducer\r\n    //   dispatch({\r\n    //     type: SET_CURRENT_USER,\r\n    //     payload: decoded\r\n    //   });\r\n    // }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfile = (linkCv, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/${linkCv}`);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    //console.log(err);\r\n    history.push(`/infoPage/${linkCv}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfileByLink = (linkCv, history) => async dispatch => {\r\n  try {\r\n    //const res = await axios.post(\"/api/users/editcv\", linkCv);\r\n    //const res = await axios.post(\"/api/profile/editcv\", linkCv);\r\n    //const res = await axios.get(`/api/profile/editcv/${linkCv}`);\r\n    const res = await axios.get(`/api/editcv/${linkCv}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    const { token } = res.data;\r\n\r\n    const jwtToken = localStorage.jwtToken;\r\n    // Only Take Care About Candidate Toke If doenst exist Current User\r\n    if (typeof jwtToken === \"undefined\" && typeof token !== \"undefined\") {\r\n      const jwtTokenCv = localStorage.jwtTokenCandidate;\r\n\r\n      if (!jwtTokenCv) {\r\n        // set our token in header ***\r\n        setJWTTokenCandidate(token);\r\n\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtTokenCandidate\", token);\r\n      }\r\n\r\n      // decode token on React\r\n      const decoded_jwtToken = jwt_decode(token);\r\n      console.log(\r\n        \"Expire Remaining:\",\r\n        decoded_jwtToken.exp - Date.now() / 1000\r\n      );\r\n\r\n      const currentTime = Date.now() / 1000;\r\n      if (decoded_jwtToken.exp < currentTime) {\r\n        window.location.href = \"/\";\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    //console.log(err);\r\n    history.push(`/infoPage/${linkCv}`);\r\n    if (typeof err.response === \"undefined\") {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const updateCV = (profile, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/editcv\", profile);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    const { profileNotfound } = err;\r\n    console.log(profileNotfound);\r\n    if (err.response.data.tokenMessage || err.response.data.profileNotfound) {\r\n      history.push(`/infoPage/${profile.profileIdentifier}`);\r\n    }\r\n    try {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    } catch (error) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteProfile = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/profile/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROFILE,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n\r\nexport const setProfileStaged = profileStaged => async dispatch => {\r\n  dispatch({\r\n    type: SET_PROFILE_STAGED,\r\n    payload: profileStaged\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProfile } from \"../../actions/profileActions\";\r\n\r\nclass ProfileItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProfile(id);\r\n  };\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.security != this.state.security) {\r\n  //     this.setState({ security: nextProps.security });\r\n  //   } else {\r\n  //     alert(\"ddd\");\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{profile.fullName}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{profile.fullName}</h3>\r\n              <p>{profile.candidateEmail}</p>\r\n            </div>\r\n            <div>\r\n              <ul className=\"list-group\">\r\n                <Link\r\n                  to={`/editcv/${profile.profileIdentifier}`}\r\n                  style={profile.token ? null : { pointerEvents: \"none\" }}\r\n                >\r\n                  <li className=\"list-group-item board\">\r\n                    <i\r\n                      className=\"fa fa-flag-checkered pr-1\"\r\n                      style={profile.token ? null : { color: \"#dddddd\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Open CV\r\n                    </i>\r\n                  </li>\r\n                </Link>\r\n                {this.props.security.admin && (\r\n                  <Link\r\n                    to={`/updateProfile/${profile.profileIdentifier}`}\r\n                    style={profile.token ? { pointerEvents: \"none\" } : null}\r\n                  >\r\n                    <li className=\"list-group-item update\">\r\n                      <i\r\n                        className=\"fa fa-edit pr-1\"\r\n                        style={profile.token ? { color: \"#dddddd\" } : null}\r\n                      >\r\n                        {\" \"}\r\n                        Token\r\n                      </i>\r\n                    </li>\r\n                  </Link>\r\n                )}\r\n                {/* <Link to={`/updateProfile/${profile.profileIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Token</i>\r\n                  </li>\r\n                </Link> */}\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    profile.profileIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileItem.propTypes = {\r\n  deleteProfile: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteProfile }\r\n)(ProfileItem);\r\n","import React, { Component } from \"react\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport CreateButton from \"../controlls/CreateButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfiles } from \"../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AllProfiles extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.getProfiles();\r\n    } else {\r\n      this.props.history.push(`/`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { profiles } = this.props.profile;\r\n\r\n    return (\r\n      <div className=\"profiles\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Profiles CV/Resume</h1>\r\n              <br />\r\n              <CreateButton\r\n                link=\"/addProfile\"\r\n                caption=\"Create a Profile\"\r\n                cssClass=\"btn btn-lg btn-info\"\r\n              />\r\n              <br />\r\n              <hr />\r\n              {profiles.map(profile => (\r\n                <ProfileItem key={profile.id} profile={profile} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAllProfiles.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  getProfiles: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(AllProfiles);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile } from \"../../actions/profileActions\";\r\nimport classnames from \"classnames\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\n\r\nclass AddProfile extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      fullName: \"\",\r\n      candidateEmail: \"\",\r\n      profileIdentifier: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProfile = {\r\n      fullName: this.state.fullName,\r\n      candidateEmail: this.state.candidateEmail\r\n    };\r\n\r\n    this.props.createProfile(newProfile, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Register New Candidate</h1>\r\n              <p className=\"lead text-center\">Create a Profile</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                    autoFocus={true}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.candidateEmail\r\n                    })}\r\n                    placeholder=\"Email Address (Candidate Email)\"\r\n                    name=\"candidateEmail\"\r\n                    value={this.state.candidateEmail}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.candidateEmail && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.candidateEmail}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Constraint\r\nAddProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile }\r\n)(requireAuth(AddProfile));\r\n","import React, { Component } from \"react\";\r\nimport { getProfile, createProfile } from \"../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\n\r\nclass UpdateProfile extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      fullName: \"\",\r\n      candidateEmail: \"\",\r\n      profileIdentifier: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier\r\n    } = nextProps.profile;\r\n\r\n    this.setState({\r\n      id,\r\n      fullName,\r\n      candidateEmail,\r\n      profileIdentifier\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProfile(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProfile = {\r\n      id: this.state.id,\r\n      fullName: this.state.fullName,\r\n      candidateEmail: this.state.candidateEmail,\r\n      profileIdentifier: this.state.profileIdentifier\r\n    };\r\n\r\n    this.props.createProfile(updateProfile, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/profiles\" className=\"btn btn-light\">\r\n                Back to Profiles\r\n              </Link>\r\n              <h5 className=\"display-4 text-center\">\r\n                Generates the Candidate Link\r\n              </h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.fullName}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Candidate e-mail\"\r\n                    name=\"candidateEmail\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.candidateEmail}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value={\r\n                    this.state.token\r\n                      ? \"The Token was genarated already\"\r\n                      : \"Gen Token\"\r\n                  }\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                  style={\r\n                    this.state.token\r\n                      ? {\r\n                          color: \"#dddddd\",\r\n                          pointerEvents: \"none\"\r\n                        }\r\n                      : null\r\n                  }\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProfile.propTypes = {\r\n  getProfile: PropTypes.func.isRequired,\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfile, createProfile }\r\n)(requireAuth(UpdateProfile));\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROFILE_BACKLOG,\r\n  GET_PROFILE_TASK,\r\n  DELETE_PROFILE_TASK\r\n} from \"./types\";\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProfileTask = (\r\n  profile_backlog_id,\r\n  profile_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/cvbacklog/${profile_backlog_id}`, profile_task);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n    history.push(`/editcv/${profile_backlog_id}`);\r\n  } catch (err) {\r\n    if (err.response.data.tokenMessage || err.response.data.profileNotfound) {\r\n      history.push(`/infoPage/${profile_backlog_id}`);\r\n    }\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfileBacklog = (\r\n  profile_backlog_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/cvbacklog/${profile_backlog_id}`);\r\n    dispatch({\r\n      type: GET_PROFILE_BACKLOG,\r\n      payload: res.data\r\n    });\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    if (err.response && err.response.data){\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }else{\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const getProfileTask = (\r\n  profile_backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/cvbacklog/${profile_backlog_id}/${pt_id}`\r\n    );\r\n    dispatch({\r\n      type: GET_PROFILE_TASK,\r\n      payload: res.data\r\n    });\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfileTask = (\r\n  profile_backlog_id,\r\n  pt_id,\r\n  profile_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(\r\n      `/api/cvbacklog/${profile_backlog_id}/${pt_id}`,\r\n      profile_task\r\n    );\r\n    dispatch({\r\n      type: GET_PROFILE_TASK,\r\n      payload: {}\r\n    });\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n    history.push(`/editcv/${profile_backlog_id}`);\r\n  } catch (err) {\r\n    if (err.response && err.response.data){\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }else{\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      });\r\n    }\r\n    \r\n  }\r\n};\r\n\r\nexport const deleteProfileTask = (\r\n  profile_backlog_id,\r\n  pt_id\r\n) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting profile task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/cvbacklog/${profile_backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROFILE_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProfileTask } from \"../../../actions/profileBacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n//import DeleteTaskButton from \"./DeleteTasksButton\";\r\n//import { FormControl } from \"react-bootstrap\";\r\nimport './profile-task.css';\r\n\r\nclass ProfileTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProfileTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { profile_task } = this.props;\r\n    let { responsibility } = profile_task;\r\n\r\n    if (responsibility){\r\n      responsibility = responsibility.sort((a,b) => a.respOrder - b.respOrder);\r\n    }\r\n    \r\n    let priorityClass;\r\n\r\n    if (profile_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n    }\r\n\r\n    if (profile_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n    }\r\n\r\n    if (profile_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n    }\r\n\r\n    const field_Top = profile_task => {\r\n      if (profile_task.taskType === \"skill\") {\r\n        return <div>Years of Experience: {profile_task.skillYears}</div>;\r\n      } else if (profile_task.taskType === \"educ\") {\r\n        return <div>Year Concluded: {profile_task.educYear}</div>;\r\n      } else if (profile_task.taskType === \"lang\") {\r\n        return <div>Language: {profile_task.levelLanguage}</div>;\r\n      } else if (profile_task.taskType === \"cliPrj\") {\r\n        return (\r\n          <div>\r\n            <div className=\"form-group\">Company: {profile_task.company}</div>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={profile_task.start_date}\r\n                    onChange={this.onChange}\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={profile_task.end_date}\r\n                    onChange={this.onChange}\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    const field_Header = profile_task => {\r\n      if (profile_task.taskType === \"skill\") {\r\n        return <div>{profile_task.skillCompetence}</div>;\r\n      } else if (profile_task.taskType === \"educ\") {\r\n        return <div>{profile_task.educOrganization}</div>;\r\n      } else if (profile_task.taskType === \"lang\") {\r\n        return <div>{profile_task.language}</div>;\r\n      } else if (profile_task.taskType === \"cliPrj\") {\r\n        return (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <h6>Position:</h6>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg\"\r\n                name=\"position\"\r\n                value={profile_task.position || \"\"}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <h6>General Context:</h6>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg\"\r\n                name=\"generalContext\"\r\n                onChange={this.onChange}\r\n                value={profile_task.generalContext || \"\"}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    const field_Body = profile_task => {\r\n      if (profile_task.taskType === \"skill\") {\r\n        return <div>{profile_task.skillDescription}</div>;\r\n      } else if (profile_task.taskType === \"educ\") {\r\n        return <div>{profile_task.educAwarded}</div>;\r\n      } else if (profile_task.taskType === \"lang\") {\r\n        return <div>{profile_task.levelLanguage}</div>;\r\n      } else if (profile_task.taskType === \"cliPrj\") {\r\n        return (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <h6>Responsabilities:</h6>\r\n              <div>\r\n                {responsibility && (responsibility.map((responsability, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col\">\r\n                          <div className=\"col-12 text-left\">\r\n                          <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"technicalEnviroment\"\r\n                            onChange={this.onChange}\r\n                            value={responsability.respFunction || \"\"}\r\n                            readOnly={true}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group col\">\r\n                          <div className=\"col-12 text-right\">\r\n                          <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"technicalEnviroment\"\r\n                            onChange={this.onChange}\r\n                            value={responsability.respTask || \"\"}\r\n                            readOnly={true}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                 })) || \"No Responsibilites Added\"}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <h6>Technical Enviroment:</h6>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg\"\r\n                name=\"technicalEnviroment\"\r\n                onChange={this.onChange}\r\n                value={profile_task.technicalEnviroment || \"\"}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    const updateAlgorithm = profile_task => {\r\n      if (profile_task.taskType === \"cliPrj\") {\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <Link\r\n              to={`/updateProfileTask/${profile_task.profileIdentifier}/${\r\n                profile_task.profileSequence\r\n              }/${profile_task.taskType}`}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              View / Update\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          {field_Top(profile_task)}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{field_Header(profile_task)}</h5>\r\n          <div className=\"card-text text-truncate \">\r\n            {field_Body(profile_task)}\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"form-group col\">\r\n                <div className=\"col-12 text-left\">\r\n                  {updateAlgorithm(profile_task)}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <div className=\"col-12 text-right\">\r\n                  <button\r\n                    className=\"btn btn-danger ml-4\"\r\n                    onClick={this.onDeleteClick.bind(\r\n                      this,\r\n                      profile_task.profileIdentifier,\r\n                      profile_task.profileSequence\r\n                    )}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileTask.propTypes = {\r\n  deleteProfileTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProfileTask }\r\n)(ProfileTask);\r\n","import React, { Component } from \"react\";\r\nimport ProfileTask from \"./ProfileTasks/ProfileTask\";\r\n\r\nclass CVBacklog extends Component {\r\n  render() {\r\n    const { profile_tasks_prop, task_type_prop } = this.props;\r\n\r\n    const tasks = profile_tasks_prop.map(profile_task => (\r\n      <ProfileTask key={profile_task.id} profile_task={profile_task} />\r\n    ));\r\n\r\n    let listTasks = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.profile_task.taskType === task_type_prop) {\r\n        listTasks.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card text-center mb-2\">\r\n              {/* <div className=\"card-header bg-secondary text-white\">\r\n                <div>Years of experiences</div>\r\n              </div> */}\r\n            </div>\r\n            {listTasks}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CVBacklog;\r\n","// Generating my CV with docx\r\n// const docx = require(\"docx@4.0.0\");\r\n// const express = require(\"@runkit/runkit/express-endpoint/1.0.0\");\r\n// const app = express(exports);\r\n//import { Document, Paragraph, Packer, TextRun } from \"docx\";\r\nimport { Document, Paragraph, TextRun } from \"docx\";\r\n\r\n// import express from \"express\";\r\n\r\n// const app = express();\r\n\r\nconst PHONE_NUMBER = \"07534563401\";\r\nconst PROFILE_URL = \"https://www.linkedin.com/in/dolan1\";\r\nconst EMAIL = \"docx@com\";\r\n\r\nconst experiences = [\r\n  {\r\n    isCurrent: true,\r\n    summary:\r\n      \"Full-stack developer working with Angular and Java. Working for the iShares platform\",\r\n    title: \"Associate Software Developer\",\r\n    startDate: {\r\n      month: 11,\r\n      year: 2017\r\n    },\r\n    company: {\r\n      name: \"BlackRock\"\r\n    }\r\n  },\r\n  {\r\n    isCurrent: false,\r\n    summary:\r\n      \"Full-stack developer working with Angular, Node and TypeScript. Working for the iShares platform. Emphasis on Dev-ops and developing the continous integration pipeline.\",\r\n    title: \"Software Developer\",\r\n    endDate: {\r\n      month: 11,\r\n      year: 2017\r\n    },\r\n    startDate: {\r\n      month: 10,\r\n      year: 2016\r\n    },\r\n    company: {\r\n      name: \"Torch Markets\"\r\n    }\r\n  },\r\n  {\r\n    isCurrent: false,\r\n    summary:\r\n      \"Used ASP.NET MVC 5 to produce a diversity data collection tool for the future of British television.\\n\\nUsed AngularJS and C# best practices. Technologies used include JavaScript, ASP.NET MVC 5, SQL, Oracle, SASS, Bootstrap, Grunt.\",\r\n    title: \"Software Developer\",\r\n    endDate: {\r\n      month: 10,\r\n      year: 2016\r\n    },\r\n    startDate: {\r\n      month: 3,\r\n      year: 2015\r\n    },\r\n    company: {\r\n      name: \"Soundmouse\"\r\n    }\r\n  },\r\n  {\r\n    isCurrent: false,\r\n    summary:\r\n      \"Develop web commerce platforms for constious high profile clients.\\n\\nCreated a log analysis web application with the Play Framework in Java, incorporating Test Driven Development. It asynchronously uploads and processes large (2 GB) log files, and outputs meaningful results in context with the problem. \\n\\nAnalysis  and  development  of  the payment system infrastructure and user accounts section to be used by several clients of the company such as Waitrose, Tally Weijl, DJ Sports, Debenhams, Ann Summers, John Lewis and others.\\n\\nTechnologies used include WebSphere Commerce, Java, JavaScript and JSP.\",\r\n    title: \"Java Developer\",\r\n    endDate: {\r\n      month: 10,\r\n      year: 2014\r\n    },\r\n    startDate: {\r\n      month: 3,\r\n      year: 2013\r\n    },\r\n    company: {\r\n      name: \"Soundmouse\"\r\n    }\r\n  }\r\n];\r\n\r\nconst education = [\r\n  {\r\n    degree: \"Master of Science (MSc)\",\r\n    fieldOfStudy: \"Computer Science\",\r\n    notes:\r\n      \"Exam Results: 1st Class with Distinction, Dissertation: 1st Class with Distinction\\n\\nRelevant Courses: Java and C# Programming, Software Engineering, Artificial Intelligence, \\nComputational Photography, Algorithmics, Architecture and Hardware.\\n\\nCreated a Windows 8 game in JavaScript for the dissertation. \\n\\nCreated an award-winning 3D stereoscopic game in C# using XNA.\",\r\n    schoolName: \"University College London\",\r\n    startDate: {\r\n      year: 2012\r\n    },\r\n    endDate: {\r\n      year: 2013\r\n    }\r\n  },\r\n  {\r\n    degree: \"Bachelor of Engineering (BEng)\",\r\n    fieldOfStudy: \"Material Science and Engineering\",\r\n    notes:\r\n      \"Exam Results: 2:1, Dissertation: 1st Class with Distinction\\n\\nRelevant courses: C Programming, Mathematics and Business for Engineers.\",\r\n    schoolName: \"Imperial College London\",\r\n    startDate: {\r\n      year: 2009\r\n    },\r\n    endDate: {\r\n      year: 2012\r\n    }\r\n  }\r\n];\r\n\r\nconst skills = [\r\n  {\r\n    name: \"Angular\"\r\n  },\r\n  {\r\n    name: \"TypeScript\"\r\n  },\r\n  {\r\n    name: \"JavaScript\"\r\n  },\r\n  {\r\n    name: \"NodeJS\"\r\n  }\r\n];\r\n\r\nconst achievements = [\r\n  {\r\n    issuer: \"Oracle\",\r\n    name: \"Oracle Certified Expert\"\r\n  }\r\n];\r\n\r\nclass DocumentCreator {\r\n  create(data) {\r\n    const experiences = data[0];\r\n    const educations = data[1];\r\n    const skills = data[2];\r\n    const achivements = data[3];\r\n    const document = new Document();\r\n    document.addParagraph(new Paragraph(\"Dolan Miu\").title());\r\n\r\n    document.addParagraph(\r\n      this.createContactInfo(PHONE_NUMBER, PROFILE_URL, EMAIL)\r\n    );\r\n    document.addParagraph(this.createHeading(\"Education\"));\r\n\r\n    for (const education of educations) {\r\n      document.addParagraph(\r\n        this.createInstitutionHeader(\r\n          education.schoolName,\r\n          `${education.startDate.year} - ${education.endDate.year}`\r\n        )\r\n      );\r\n      document.addParagraph(\r\n        this.createRoleText(`${education.fieldOfStudy} - ${education.degree}`)\r\n      );\r\n\r\n      const bulletPoints = this.splitParagraphIntoBullets(education.notes);\r\n      bulletPoints.forEach(bulletPoint => {\r\n        document.addParagraph(this.createBullet(bulletPoint));\r\n      });\r\n    }\r\n\r\n    document.addParagraph(this.createHeading(\"Experience\"));\r\n\r\n    for (const position of experiences) {\r\n      document.addParagraph(\r\n        this.createInstitutionHeader(\r\n          position.company.name,\r\n          this.createPositionDateText(\r\n            position.startDate,\r\n            position.endDate,\r\n            position.isCurrent\r\n          )\r\n        )\r\n      );\r\n      document.addParagraph(this.createRoleText(position.title));\r\n\r\n      const bulletPoints = this.splitParagraphIntoBullets(position.summary);\r\n\r\n      bulletPoints.forEach(bulletPoint => {\r\n        document.addParagraph(this.createBullet(bulletPoint));\r\n      });\r\n    }\r\n\r\n    document.addParagraph(\r\n      this.createHeading(\"Skills, Achievements and Interests\")\r\n    );\r\n\r\n    document.addParagraph(this.createSubHeading(\"Skills\"));\r\n    document.addParagraph(this.createSkillList(skills));\r\n\r\n    document.addParagraph(this.createSubHeading(\"Achievements\"));\r\n\r\n    for (const achievementParagraph of this.createAchivementsList(\r\n      achivements\r\n    )) {\r\n      document.addParagraph(achievementParagraph);\r\n    }\r\n\r\n    document.addParagraph(this.createSubHeading(\"Interests\"));\r\n\r\n    document.addParagraph(\r\n      this.createInterests(\r\n        \"Programming, Technology, Music Production, Web Design, 3D Modelling, Dancing.\"\r\n      )\r\n    );\r\n\r\n    document.addParagraph(this.createHeading(\"References\"));\r\n\r\n    document.addParagraph(\r\n      new Paragraph(\r\n        \"Dr. Dean Mohamedally Director of Postgraduate Studies Department of Computer Science, University College London Malet Place, Bloomsbury, London WC1E d.mohamedally@ucl.ac.uk\"\r\n      )\r\n    );\r\n    document.addParagraph(new Paragraph(\"More references upon request\"));\r\n    document.addParagraph(\r\n      new Paragraph(\r\n        \"This CV was generated in real-time based on my Linked-In profile from my personal website www.dolan.bio.\"\r\n      ).center()\r\n    );\r\n    return document;\r\n  }\r\n\r\n  createContactInfo(phoneNumber, profileUrl, email) {\r\n    const paragraph = new Paragraph().center();\r\n    const contactInfo = new TextRun(\r\n      `Mobile: ${phoneNumber} | LinkedIn: ${profileUrl} | Email: ${email}`\r\n    );\r\n    const address = new TextRun(\r\n      \"Address: 58 Elm Avenue, Kent ME4 6ER, UK\"\r\n    ).break();\r\n\r\n    paragraph.addRun(contactInfo);\r\n    paragraph.addRun(address);\r\n\r\n    return paragraph;\r\n  }\r\n\r\n  createHeading(text) {\r\n    return new Paragraph(text).heading1().thematicBreak();\r\n  }\r\n\r\n  createSubHeading(text) {\r\n    return new Paragraph(text).heading2();\r\n  }\r\n\r\n  createInstitutionHeader(institutionName, dateText) {\r\n    const paragraph = new Paragraph().maxRightTabStop();\r\n    const institution = new TextRun(institutionName).bold();\r\n    const date = new TextRun(dateText).tab().bold();\r\n\r\n    paragraph.addRun(institution);\r\n    paragraph.addRun(date);\r\n\r\n    return paragraph;\r\n  }\r\n\r\n  createRoleText(roleText) {\r\n    const paragraph = new Paragraph();\r\n    const role = new TextRun(roleText).bold();\r\n\r\n    paragraph.addRun(role);\r\n\r\n    return paragraph;\r\n  }\r\n\r\n  createBullet(text) {\r\n    return new Paragraph(text).bullet();\r\n  }\r\n\r\n  createSkillList(skills) {\r\n    const paragraph = new Paragraph();\r\n    const skillConcat = skills.map(skill => skill.name).join(\", \") + \".\";\r\n\r\n    paragraph.addRun(new TextRun(skillConcat));\r\n\r\n    return paragraph;\r\n  }\r\n\r\n  createAchivementsList(achivements) {\r\n    const arr = [];\r\n\r\n    for (const achievement of achivements) {\r\n      arr.push(new Paragraph(achievement.name).bullet());\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  createInterests(interests) {\r\n    const paragraph = new Paragraph();\r\n\r\n    paragraph.addRun(new TextRun(interests));\r\n    return paragraph;\r\n  }\r\n\r\n  splitParagraphIntoBullets(text) {\r\n    return text.split(\"\\n\\n\");\r\n  }\r\n\r\n  createPositionDateText(startDate, endDate, isCurrent) {\r\n    const startDateText =\r\n      this.getMonthFromInt(startDate.month) + \". \" + startDate.year;\r\n    const endDateText = isCurrent\r\n      ? \"Present\"\r\n      : `${this.getMonthFromInt(endDate.month)}. ${endDate.year}`;\r\n\r\n    return `${startDateText} - ${endDateText}`;\r\n  }\r\n\r\n  getMonthFromInt(value) {\r\n    switch (value) {\r\n      case 1:\r\n        return \"Jan\";\r\n      case 2:\r\n        return \"Feb\";\r\n      case 3:\r\n        return \"Mar\";\r\n      case 4:\r\n        return \"Apr\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"Jun\";\r\n      case 7:\r\n        return \"Jul\";\r\n      case 8:\r\n        return \"Aug\";\r\n      case 9:\r\n        return \"Sept\";\r\n      case 10:\r\n        return \"Oct\";\r\n      case 11:\r\n        return \"Nov\";\r\n      case 12:\r\n        return \"Dec\";\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n}\r\n//app.get(\"/\", async (req, res) => {\r\nconst GenerateCV = profile => {\r\n  const documentCreator = new DocumentCreator();\r\n  const doc = documentCreator.create([\r\n    experiences,\r\n    education,\r\n    skills,\r\n    achievements\r\n  ]);\r\n  return doc;\r\n};\r\n\r\nexport default GenerateCV;\r\n\r\n// const b64string = await packer.toBase64String(doc);\r\n\r\n// res.setHeader(\"Content-Disposition\", \"attachment; filename=My Document.docx\");\r\n// res.send(Buffer.from(b64string, \"base64\"));\r\n","import React, { Component } from \"react\";\r\nimport { getProfileByLink, updateCV } from \"../../actions/profileActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\nimport { getProfileBacklog } from \"../../actions/profileBacklogActions\";\r\nimport CVBacklog from \"./CVBacklog\";\r\nimport {\r\n  TASK_TYPE_SKILSS,\r\n  TASK_TYPE_EDUC,\r\n  TASK_TYPE_LANG,\r\n  TASK_TYPE_CLI_PRJ\r\n} from \"../../actions/types\";\r\n//import { SET_PROFILE_STAGED } from \"../../actions/types\";\r\n//import * as fs from \"fs\";\r\n//import { Document, Packer, Paragraph, TextRun } from \"docx\";\r\nimport { Packer } from \"docx\";\r\nimport { saveAs } from \"file-saver\";\r\n//import createReport from \"docx-templates\";\r\nimport GenerateCV from \"./templates/TemplateDossie\";\r\nimport CreateButton from \"../controlls/CreateButton\";\r\n\r\nclass CVBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      fullName: \"\",\r\n      candidateEmail: \"\",\r\n      profileIdentifier: \"\",\r\n      token: \"\",\r\n      summary: \"\",\r\n      typeProfile: \"\",\r\n      otherProfile: \"\",\r\n      technologyArea: \"\",\r\n      domains: \"\",\r\n      certifications: \"\",\r\n      tools: \"\",\r\n      trainings: \"\",\r\n      methodologies: \"\",\r\n      others: \"\",\r\n      faseProfile: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.handleEnter = this.handleEnter.bind(this);\r\n    //this._handleButtonClick = this._handleButtonClick.bind(this);\r\n  }\r\n\r\n  onGenerateCv(document) {\r\n    // createReport({\r\n    //   template: \"templates/myTemplate.docx\",\r\n    //   output: \"reports/myReport.docx\",\r\n    //   data: {\r\n    //     name: \"John\",\r\n    //     surname: \"Appleseed\"\r\n    //   }\r\n    // });\r\n\r\n    const doc = GenerateCV(this.props.profile);\r\n\r\n    const packer = new Packer();\r\n    packer.toBlob(doc).then(blob => {\r\n      console.log(blob);\r\n      saveAs(blob, `Dossie-${this.state.fullName}.docx`);\r\n      console.log(\"Document created successfully\");\r\n    });\r\n\r\n    // const doc = new Document();\r\n\r\n    // const paragraph = new Paragraph(\"Hello World\");\r\n    // const institutionText = new TextRun(\"Foo Bar\").bold();\r\n    // const dateText = new TextRun(\"Github is the best\").tab().bold();\r\n    // paragraph.addRun(institutionText);\r\n    // paragraph.addRun(dateText);\r\n\r\n    // doc.addParagraph(paragraph);\r\n\r\n    // const packer = new Packer();\r\n\r\n    // packer.toBlob(doc).then(blob => {\r\n    //   console.log(blob);\r\n    //   saveAs(blob, `Dossie-${this.state.fullName}.docx`);\r\n    //   console.log(\"Document created successfully\");\r\n    // });\r\n  }\r\n\r\n  handleEnter(event) {\r\n    if (event.keyCode === 13) {\r\n      const form = event.target.form;\r\n      const index = Array.prototype.indexOf.call(form, event.target);\r\n      form.elements[index + 1].focus();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // for (let x in this.refs) {\r\n    //   this.refs[x].onkeypress = e => this._handleKeyPress(e, this.refs[x]);\r\n    // }\r\n    // this.refs.focus();\r\n\r\n    const { id } = this.props.match.params;\r\n    //console.log(\"DidMount: \", this.props);\r\n\r\n    if (this.props.security.validToken) {\r\n      this.props.getProfileByLink(id, this.props.history);\r\n\r\n      this.props.getProfileBacklog(id, this.props.history);\r\n    } else {\r\n      this.props.history.push(`/`);\r\n    }\r\n  }\r\n\r\n  // componentWillUpdate(prevProps, prevState, snapshot) {\r\n  //   console.log(\"prevProps\", prevProps);\r\n  //   console.log(\"prevState\", prevState);\r\n  //   console.log(\"snapshot\", snapshot);\r\n  // }\r\n\r\n  componentWillReceiveProps(nextProps, prevProps) {\r\n    //console.log(\"WillReceiveProps: \", this.nextProps);\r\n    if (nextProps.errors && nextProps.errors !== this.state.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    if (nextProps.profile && nextProps.profile !== this.state.profile) {\r\n      const {\r\n        id,\r\n        fullName,\r\n        candidateEmail,\r\n        profileIdentifier,\r\n        token,\r\n        summary,\r\n        typeProfile,\r\n        otherProfile,\r\n        technologyArea,\r\n        domains,\r\n        certifications,\r\n        tools,\r\n        trainings,\r\n        methodologies,\r\n        others,\r\n        faseProfile\r\n      } = nextProps.profile;\r\n\r\n      this.setState({\r\n        id,\r\n        fullName,\r\n        candidateEmail,\r\n        profileIdentifier,\r\n        token,\r\n        summary,\r\n        typeProfile,\r\n        otherProfile,\r\n        technologyArea,\r\n        domains,\r\n        certifications,\r\n        tools,\r\n        trainings,\r\n        methodologies,\r\n        others,\r\n        faseProfile\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    // if (e.target.name === \"summary\") {\r\n    //   const profileStaged = {\r\n    //     summary:\r\n    //       e.target.name === \"summary\" ? e.target.value : this.state.summary\r\n    //   };\r\n    //   //console.log(profileStaged);\r\n    //   this.props.dispatch({\r\n    //     type: SET_PROFILE_STAGED,\r\n    //     payload: profileStaged\r\n    //   });\r\n    // } else {\r\n    //   if (e.target.name === \"typeProfile\") {\r\n    //     const profileStaged = {\r\n    //       typeProfile:\r\n    //         e.target.name === \"typeProfile\"\r\n    //           ? e.target.value\r\n    //           : this.state.typeProfile\r\n    //     };\r\n    //     //console.log(profileStaged);\r\n    //     this.props.dispatch({\r\n    //       type: SET_PROFILE_STAGED,\r\n    //       payload: profileStaged\r\n    //     });\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.updateProfile();\r\n  }\r\n\r\n  updateProfile() {\r\n    const updateProfile = {\r\n      id: this.state.id,\r\n      fullName: this.state.fullName,\r\n      candidateEmail: this.state.candidateEmail,\r\n      profileIdentifier: this.state.profileIdentifier,\r\n      summary: this.state.summary,\r\n      typeProfile: this.state.typeProfile,\r\n      otherProfile: this.state.otherProfile,\r\n      technologyArea: this.state.technologyArea,\r\n      domains: this.state.domains,\r\n      certifications: this.state.certifications,\r\n      tools: this.state.tools,\r\n      trainings: this.state.trainings,\r\n      methodologies: this.state.methodologies,\r\n      others: this.state.others,\r\n      faseProfile: this.state.faseProfile\r\n    };\r\n\r\n    //console.log(updateProfile);\r\n\r\n    this.props.updateCV(updateProfile, this.props.history);\r\n    //window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n    const { profile_tasks } = this.props.profileBacklog;\r\n\r\n    const algorithmTask = taskType_To_Filter => {\r\n      if (taskType_To_Filter === TASK_TYPE_SKILSS) {\r\n        return \"Competences\";\r\n      } else if (taskType_To_Filter === TASK_TYPE_EDUC) {\r\n        return \"Educations\";\r\n      } else if (taskType_To_Filter === TASK_TYPE_LANG) {\r\n        return \"Languages\";\r\n      } else if (taskType_To_Filter === TASK_TYPE_CLI_PRJ) {\r\n        return \"Client/Projects\";\r\n      }\r\n    };\r\n\r\n    const boardAlgorithm = (errors, profile_tasks, taskType_To_Filter) => {\r\n      if (profile_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER CHECK\r\n        if (errors.profileNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.profileNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.profileIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.profileIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          // if (taskType_To_Filter === TASK_TYPE_SKILSS) {\r\n          return (\r\n            <Link\r\n              to={`/addProfileTask/${id}/${taskType_To_Filter}`}\r\n              className=\"btn alert-info btn-block mt-4\"\r\n              role=\"alert\"\r\n              style={\r\n                this.state.typeProfile !== \"Select\" &&\r\n                this.state.faseProfile === 1\r\n                  ? null\r\n                  : { pointerEvents: \"none\" }\r\n              }\r\n            >\r\n              No {algorithmTask(taskType_To_Filter)} Added\r\n            </Link>\r\n          );\r\n          //\r\n        }\r\n      } else {\r\n        return (\r\n          <CVBacklog\r\n            profile_tasks_prop={profile_tasks}\r\n            task_type_prop={taskType_To_Filter}\r\n          />\r\n        );\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"form-group col\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              style={{\r\n                position: \"fixed\",\r\n                bottom: \"0\",\r\n                right: \"0\",\r\n                width: \"200px\",\r\n                zIndex: \"9999\"\r\n              }}\r\n              className=\"btn btn-danger ml-4\"\r\n              onClick={this.onGenerateCv.bind(this, \"obabba\")}\r\n            >\r\n              Generate Cv\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"form-group col\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                {this.props.security.admin && (\r\n                  <CreateButton\r\n                    link=\"/profiles\"\r\n                    caption=\"Back to Profiles\"\r\n                    cssClass=\"btn btn-light\"\r\n                  />\r\n                )}\r\n                <div className=\"display-4 text-center\">Edit CV form</div>\r\n                <hr />\r\n                {this.props.security.admin && (\r\n                  <div>\r\n                    <div className=\"text-center\">Session expire in 2 days</div>\r\n                    <hr />\r\n                  </div>\r\n                )}\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div\r\n                    role=\"grid\"\r\n                    onBlur={this._onBlur}\r\n                    onFocus={this._onFocus}\r\n                  >\r\n                    {this.props.children}\r\n                  </div>\r\n                  <h6>Full name :</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.fullName\r\n                      })}\r\n                      placeholder=\"Full Name\"\r\n                      name=\"fullName\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.fullName || \"\"}\r\n                      autoFocus={true}\r\n                      onKeyDown={this.handleEnter}\r\n                    />\r\n                    {errors.fullName && (\r\n                      <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <h6>Profile Area :</h6>\r\n                    <select\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.typeProfile\r\n                      })}\r\n                      name=\"typeProfile\"\r\n                      value={this.state.typeProfile}\r\n                      onChange={this.onChange}\r\n                      ref=\"fullName\"\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Software\">Software</option>\r\n                      <option value=\"Engineer\">Engineer</option>\r\n                      <option value=\"Lead Team\">Lead Team</option>\r\n                      <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    {errors.typeProfile && (\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          marginTop: \".25rem\",\r\n                          fontSize: \"80%\",\r\n                          color: \"#dc3545\"\r\n                        }}\r\n                      >\r\n                        {errors.typeProfile}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {this.state.typeProfile === \"Other\" && (\r\n                    <div>\r\n                      <h6>Other :</h6>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className={classnames(\r\n                            \"form-control form-control-lg \",\r\n                            {\r\n                              \"is-invalid\": errors.otherProfile\r\n                            }\r\n                          )}\r\n                          placeholder=\"Please specify\"\r\n                          name=\"otherProfile\"\r\n                          onChange={this.onChange}\r\n                          value={this.state.otherProfile}\r\n                          autoFocus={true}\r\n                        />\r\n                        {errors.otherProfile && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.otherProfile}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <hr />\r\n                    </div>\r\n                  )}\r\n                  <h6>Technoly Area :</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.technologyArea\r\n                      })}\r\n                      placeholder=\"Technology Area\"\r\n                      name=\"technologyArea\"\r\n                      onChange={this.onChange}\r\n                      value={this.state.technologyArea || \"\"}\r\n                    />\r\n                    {errors.technologyArea && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.technologyArea}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <h6>Experiences:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.summary\r\n                      })}\r\n                      placeholder=\"Summary of profile\"\r\n                      name=\"summary\"\r\n                      value={this.state.summary}\r\n                      onChange={this.onChange}\r\n                      ref=\"fullName\"\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.summary && (\r\n                      <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.summary ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={this.state.summary ? null : { color: \"#dddddd\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n                  <hr />\r\n                  <h6>Years of Experiences:</h6>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-12 text-right\">\r\n                        <Link\r\n                          to={`/addProfileTask/${id}/${\"skill\"}`}\r\n                          className=\"\"\r\n                          style={\r\n                            this.state.typeProfile !== \"Select\" &&\r\n                            this.state.faseProfile === 1\r\n                              ? null\r\n                              : { pointerEvents: \"none\" }\r\n                          }\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-plus-circle\"\r\n                            style={\r\n                              this.state.typeProfile !== \"Select\" &&\r\n                              this.state.faseProfile === 1\r\n                                ? null\r\n                                : { color: \"#dddddd\" }\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            Add Competences\r\n                          </i>\r\n                        </Link>\r\n                      </div>\r\n                      {boardAlgorithm(\r\n                        errors,\r\n                        profile_tasks.filter(\r\n                          profile_tasks =>\r\n                            profile_tasks.taskType === TASK_TYPE_SKILSS\r\n                        ),\r\n                        \"skill\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <h6>Domains:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.domains\r\n                      })}\r\n                      placeholder=\"Domains\"\r\n                      name=\"domains\"\r\n                      value={this.state.domains || \"\"}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.domains && (\r\n                      <div className=\"invalid-feedback\">{errors.domains}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.domains ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={this.state.domains ? null : { color: \"#dddddd\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Certifications:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.certifications\r\n                      })}\r\n                      placeholder=\"Certifications\"\r\n                      name=\"certifications\"\r\n                      value={this.state.certifications || \"\"}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.certifications && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.certifications}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.certifications\r\n                          ? null\r\n                          : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={\r\n                          this.state.certifications\r\n                            ? null\r\n                            : { color: \"#dddddd\" }\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Tools:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.tools\r\n                      })}\r\n                      placeholder=\"Tools\"\r\n                      name=\"tools\"\r\n                      value={this.state.tools || \"\"}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.tools && (\r\n                      <div className=\"invalid-feedback\">{errors.tools}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.tools ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={this.state.tools ? null : { color: \"#dddddd\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Trainings:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.trainings\r\n                      })}\r\n                      placeholder=\"Trainings\"\r\n                      name=\"trainings\"\r\n                      value={this.state.trainings || \"\"}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.trainings && (\r\n                      <div className=\"invalid-feedback\">{errors.trainings}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.trainings ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={\r\n                          this.state.trainings ? null : { color: \"#dddddd\" }\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Methodologies:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.methodologies\r\n                      })}\r\n                      placeholder=\"Methodologies\"\r\n                      name=\"methodologies\"\r\n                      value={this.state.methodologies || \"\"}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.methodologies && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.methodologies}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.methodologies\r\n                          ? null\r\n                          : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={\r\n                          this.state.methodologies ? null : { color: \"#dddddd\" }\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <h6>Others:</h6>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.others\r\n                      })}\r\n                      placeholder=\"Others\"\r\n                      name=\"others\"\r\n                      value={this.state.others || \"\"}\r\n                      // onChange={this.onChange.bind(this)}\r\n                      onChange={this.onChange}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        height: \"251px\"\r\n                      }}\r\n                    />\r\n                    {errors.others && (\r\n                      <div className=\"invalid-feedback\">{errors.others}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-12 text-right\">\r\n                    <Link\r\n                      to={`/editcv/${id}`}\r\n                      onClick={this.updateProfile.bind(this)}\r\n                      className=\"\"\r\n                      style={\r\n                        this.state.others ? null : { pointerEvents: \"none\" }\r\n                      }\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus-circle\"\r\n                        style={this.state.others ? null : { color: \"#dddddd\" }}\r\n                      >\r\n                        {\" \"}\r\n                        Save\r\n                      </i>\r\n                    </Link>\r\n                  </div>\r\n                  <hr />\r\n                  <h6>Education - Languages:</h6>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-12 text-right\">\r\n                        <Link\r\n                          to={`/addProfileTask/${id}/${\"educ\"}`}\r\n                          className=\"\"\r\n                          style={\r\n                            this.state.typeProfile !== \"Select\" &&\r\n                            this.state.faseProfile === 1\r\n                              ? null\r\n                              : { pointerEvents: \"none\" }\r\n                          }\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-plus-circle\"\r\n                            style={\r\n                              this.state.typeProfile !== \"Select\" &&\r\n                              this.state.faseProfile === 1\r\n                                ? null\r\n                                : { color: \"#dddddd\" }\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            Add Educations\r\n                          </i>\r\n                        </Link>\r\n                      </div>\r\n                      {boardAlgorithm(\r\n                        errors,\r\n                        profile_tasks.filter(\r\n                          profile_tasks =>\r\n                            profile_tasks.taskType === TASK_TYPE_EDUC\r\n                        ),\r\n                        \"educ\"\r\n                      )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-12 text-right\">\r\n                        <Link\r\n                          to={`/addProfileTask/${id}/${\"lang\"}`}\r\n                          className=\"\"\r\n                          style={\r\n                            this.state.typeProfile !== \"Select\" &&\r\n                            this.state.faseProfile === 1\r\n                              ? null\r\n                              : { pointerEvents: \"none\" }\r\n                          }\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-plus-circle\"\r\n                            style={\r\n                              this.state.typeProfile !== \"Select\" &&\r\n                              this.state.faseProfile === 1\r\n                                ? null\r\n                                : { color: \"#dddddd\" }\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            Add Languages\r\n                          </i>\r\n                        </Link>\r\n                      </div>\r\n                      {boardAlgorithm(\r\n                        errors,\r\n                        profile_tasks.filter(\r\n                          profile_tasks =>\r\n                            profile_tasks.taskType === TASK_TYPE_LANG\r\n                        ),\r\n                        \"lang\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <h6>Projects:</h6>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-12 text-right\">\r\n                        <Link\r\n                          to={`/addProfileTask/${id}/${\"cliPrj\"}`}\r\n                          className=\"\"\r\n                          style={\r\n                            this.state.typeProfile !== \"Select\" &&\r\n                            this.state.faseProfile === 1\r\n                              ? null\r\n                              : { pointerEvents: \"none\" }\r\n                          }\r\n                        >\r\n                          <i\r\n                            className=\"fas fa-plus-circle\"\r\n                            style={\r\n                              this.state.typeProfile !== \"Select\" &&\r\n                              this.state.faseProfile === 1\r\n                                ? null\r\n                                : { color: \"#dddddd\" }\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            Add Client/Projects\r\n                          </i>\r\n                        </Link>\r\n                      </div>\r\n                      {boardAlgorithm(\r\n                        errors,\r\n                        profile_tasks.filter(\r\n                          profile_tasks =>\r\n                            profile_tasks.taskType === TASK_TYPE_CLI_PRJ\r\n                        ),\r\n                        \"cliPrj\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <hr />\r\n                  {errors.technologyArea && (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        marginTop: \".25rem\",\r\n                        fontSize: \"80%\",\r\n                        color: \"#dc3545\"\r\n                      }}\r\n                    >\r\n                      {\"Please Check the fields above:\"}\r\n                    </div>\r\n                  )}\r\n                  <input\r\n                    // style={{\r\n                    //   position: \"absolute\",\r\n                    //   right: \"0\",\r\n                    //   bottom: \"0\"\r\n                    // }}\r\n                    onClick={this._handleButtonClick}\r\n                    type=\"submit\"\r\n                    value=\"Save\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCVBoard.propTypes = {\r\n  profileBacklog: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getProfileByLink: PropTypes.func.isRequired,\r\n  updateCV: PropTypes.func.isRequired,\r\n  getProfileBacklog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile.profile,\r\n  profileBacklog: state.profileBacklog,\r\n  errors: state.errors,\r\n  //profileBacklog: state.profile.profileBacklog,\r\n  getProfileByLink: state.getProfileByLink,\r\n  getProfileBacklog: state.getProfileBacklog\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileByLink, updateCV, getProfileBacklog }\r\n)(requireAuth(CVBoard));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport {\r\n  addProfileTask,\r\n  updateProfileTask\r\n} from \"../../../../actions/profileBacklogActions\";\r\n\r\nclass EducationForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      title: \"\",\r\n      profileSequence: \"\",\r\n      profileIdentifier: \"\",\r\n      educYear: \"\",\r\n      educAwarded: \"\",\r\n      educOrganization: \"\",\r\n      create_At: \"\",\r\n      profile: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state);\r\n    console.log(this.props);\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.errors) {\r\n  //     this.setState({ errors: nextProps.errors });\r\n  //   }\r\n\r\n  //   const {\r\n  //     id,\r\n  //     profileSequence,\r\n  //     profileIdentifier,\r\n  //     title,\r\n  //     summary,\r\n  //     educYear,\r\n  //     educAwarded,\r\n  //     educOrganization,\r\n  //     create_At\r\n  //   } = nextProps.profile_task;\r\n\r\n  //   this.setState({\r\n  //     id,\r\n  //     profileSequence,\r\n  //     profileIdentifier,\r\n  //     title,\r\n  //     educYear,\r\n  //     educAwarded,\r\n  //     educOrganization,\r\n  //     create_At\r\n  //   });\r\n  // }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ educYear: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ educYear: \"\" });\r\n      } else {\r\n        this.setState({ educYear: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.props.typeForm === \"Add\") {\r\n      // const newTask = {\r\n      //   educYear: this.state.educYear,\r\n      //   educAwarded: this.state.educAwarded,\r\n      //   educOrganization: this.state.educOrganization\r\n      // };\r\n      const newTask = {\r\n        ...this.props,\r\n        //profileStaged: action.payload\r\n        profile: {\r\n          ...this.props.profile,\r\n          educYear: this.state.educYear,\r\n          educAwarded: this.state.educAwarded,\r\n          educOrganization: this.state.educOrganization,\r\n          taskType: this.props.taskType\r\n        }\r\n      };\r\n\r\n      this.props.addProfileTask(\r\n        this.props.profileIdentifier,\r\n        newTask.profile,\r\n        this.props.history\r\n      );\r\n    } else {\r\n      const UpdateProfileTask = {\r\n        id: this.state.id,\r\n        educYear: this.state.educYear,\r\n        educAwarded: this.state.educAwarded,\r\n        educOrganization: this.state.educOrganization\r\n      };\r\n\r\n      // console.log(UpdateProfileTask);\r\n      this.props.updateProfileTask(\r\n        this.state.profileIdentifier,\r\n        this.state.profileSequence,\r\n        UpdateProfileTask,\r\n        this.props.history\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors, typeForm } = this.props;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.props.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">{typeForm} Education</h4>\r\n              <div className=\"lead text-center\">\r\n                <hr />\r\n                {this.props.profile.profileSequence && (\r\n                  <span>\r\n                    Education ID: {this.props.profile.profileSequence}{\" \"}\r\n                  </span>\r\n                )}\r\n                {errors.profileNotFound && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {\"Please Check the fields above:\"}\r\n                    <hr />\r\n                    {errors.profileNotFound}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <form onSubmit={this.onSubmit}>\r\n                <h6>Organization:</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.educOrganization\r\n                    })}\r\n                    name=\"educOrganization\"\r\n                    placeholder=\"Organization\"\r\n                    value={this.state.educOrganization}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.educOrganization && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.educOrganization}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Qualification Awarded :</h6>\r\n                  <select\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.educAwarded\r\n                    })}\r\n                    name=\"educAwarded\"\r\n                    value={this.state.educAwarded}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Awarded</option>\r\n                    <option value=\"Diplom\">Diplom</option>\r\n                    <option value=\"Bsc\">Bsc</option>\r\n                    <option value=\"Msc\">Msc</option>\r\n                    <option value=\"Mag\">Mag</option>\r\n                    <option value=\"Dipl.Ing\">Dipl.Ing</option>\r\n                    <option value=\"Phd\">Phd</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                  </select>\r\n                  {errors.educAwarded && (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        marginTop: \".25rem\",\r\n                        fontSize: \"80%\",\r\n                        color: \"#dc3545\"\r\n                      }}\r\n                    >\r\n                      {errors.educAwarded}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Year Concluded:</h6>\r\n                <NumericInput\r\n                  mobile\r\n                  min={1900}\r\n                  max={new Date().getFullYear()}\r\n                  className=\"form-control\"\r\n                  name=\"educYear\"\r\n                  onChange={this.onChangeText}\r\n                  value={this.state.educYear}\r\n                />\r\n                {errors.educYear && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {errors.educYear}\r\n                  </div>\r\n                )}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Save\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEducationForm.propTypes = {\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  title: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  title: state.title,\r\n  profile: state.profile.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask, updateProfileTask }\r\n)(EducationForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport {\r\n  addProfileTask,\r\n  updateProfileTask\r\n} from \"../../../../actions/profileBacklogActions\";\r\n\r\nclass SkillsForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      title: \"\",\r\n      profileSequence: \"\",\r\n      profileIdentifier: \"\",\r\n      skillYears: \"\",\r\n      skillCompetence: \"\",\r\n      create_At: \"\",\r\n      profile: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ skillYears: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ skillYears: \"\" });\r\n      } else {\r\n        this.setState({ skillYears: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.props.typeForm === \"Add\") {\r\n      const newTask = {\r\n        ...this.props,\r\n        //profileStaged: action.payload\r\n        profile: {\r\n          ...this.props.profile,\r\n          skillYears: this.state.skillYears,\r\n          skillCompetence: this.state.skillCompetence,\r\n          taskType: this.props.taskType\r\n        }\r\n      };\r\n\r\n      this.props.addProfileTask(\r\n        this.props.profileIdentifier,\r\n        newTask.profile,\r\n        this.props.history\r\n      );\r\n    } else {\r\n      const UpdateProfileTask = {\r\n        id: this.state.id,\r\n        skillYears: this.state.skillYears,\r\n        skillCompetence: this.state.skillCompetence\r\n      };\r\n\r\n      // console.log(UpdateProfileTask);\r\n      this.props.updateProfileTask(\r\n        this.state.profileIdentifier,\r\n        this.state.profileSequence,\r\n        UpdateProfileTask,\r\n        this.props.history\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors, typeForm } = this.props;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.props.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">{typeForm} Competences</h4>\r\n              <div className=\"lead text-center\">\r\n                <hr />\r\n                {this.props.profile.profileSequence && (\r\n                  <span>\r\n                    Competence ID: {this.props.profile.profileSequence}{\" \"}\r\n                  </span>\r\n                )}\r\n                {errors.profileNotFound && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {\"Please Check the fields above:\"}\r\n                    <hr />\r\n                    {errors.profileNotFound}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <h6>Compentence:</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.skillCompetence\r\n                    })}\r\n                    name=\"skillCompetence\"\r\n                    placeholder=\"Competences\"\r\n                    value={this.state.skillCompetence}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.skillCompetence && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.skillCompetence}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Years:</h6>\r\n                <NumericInput\r\n                  mobile\r\n                  min={1}\r\n                  max={50}\r\n                  className=\"form-control\"\r\n                  name=\"skillYears\"\r\n                  onChange={this.onChangeText}\r\n                  value={this.state.skillYears}\r\n                />\r\n                {errors.skillYears && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {errors.skillYears}\r\n                  </div>\r\n                )}\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Save\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSkillsForm.propTypes = {\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  title: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  title: state.title,\r\n  profile: state.profile.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask, updateProfileTask }\r\n)(SkillsForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  addProfileTask,\r\n  updateProfileTask\r\n} from \"../../../../actions/profileBacklogActions\";\r\n\r\nclass LanguagesForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      title: \"\",\r\n      profileSequence: \"\",\r\n      profileIdentifier: \"\",\r\n      levelLanguage: \"\",\r\n      language: \"\",\r\n      create_At: \"\",\r\n      profile: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state);\r\n    console.log(this.props);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.props.typeForm === \"Add\") {\r\n      const newTask = {\r\n        ...this.props,\r\n        //profileStaged: action.payload\r\n        profile: {\r\n          ...this.props.profile,\r\n          levelLanguage: this.state.levelLanguage,\r\n          language: this.state.language,\r\n          taskType: this.props.taskType\r\n        }\r\n      };\r\n\r\n      this.props.addProfileTask(\r\n        this.props.profileIdentifier,\r\n        newTask.profile,\r\n        this.props.history\r\n      );\r\n    } else {\r\n      const UpdateProfileTask = {\r\n        id: this.state.id,\r\n        levelLanguage: this.state.levelLanguage,\r\n        language: this.state.language\r\n      };\r\n\r\n      // console.log(UpdateProfileTask);\r\n      this.props.updateProfileTask(\r\n        this.state.profileIdentifier,\r\n        this.state.profileSequence,\r\n        UpdateProfileTask,\r\n        this.props.history\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors, typeForm } = this.props;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.props.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">{typeForm} Language</h4>\r\n              <div className=\"lead text-center\">\r\n                <hr />\r\n                {this.props.profile.profileSequence && (\r\n                  <span>\r\n                    Language ID: {this.props.profile.profileSequence}{\" \"}\r\n                  </span>\r\n                )}\r\n                {errors.profileNotFound && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {\"Please Check the fields above:\"}\r\n                    <hr />\r\n                    {errors.profileNotFound}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <form onSubmit={this.onSubmit}>\r\n                <h6>Organization:</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.language\r\n                    })}\r\n                    name=\"language\"\r\n                    placeholder=\"Language\"\r\n                    value={this.state.language}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.language && (\r\n                    <div className=\"invalid-feedback\">{errors.language}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Qualification Awarded :</h6>\r\n                  <select\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.levelLanguage\r\n                    })}\r\n                    name=\"levelLanguage\"\r\n                    value={this.state.levelLanguage}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Level</option>\r\n                    <option value=\"Beginner\">Beginner</option>\r\n                    <option value=\"Medium\">Medium</option>\r\n                    <option value=\"Fluent\">Fluent</option>\r\n                    <option value=\"Mother Tongue\">Mother Tongue</option>\r\n                  </select>\r\n                  {errors.levelLanguage && (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        marginTop: \".25rem\",\r\n                        fontSize: \"80%\",\r\n                        color: \"#dc3545\"\r\n                      }}\r\n                    >\r\n                      {errors.levelLanguage}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Save\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanguagesForm.propTypes = {\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  title: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  title: state.title,\r\n  profile: state.profile.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask, updateProfileTask }\r\n)(LanguagesForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  addProfileTask,\r\n  updateProfileTask\r\n} from \"../../../../actions/profileBacklogActions\";\r\nimport { FormControl, ControlLabel, Button } from \"react-bootstrap\";\r\n\r\nclass ClientProjectForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      profileSequence: \"\",\r\n      profileIdentifier: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      months: \"\",\r\n      position: \"\",\r\n      company: \"\",\r\n      generalContext: \"\",\r\n      responsibility: [],\r\n      technicalEnviroment: \"\",\r\n      create_At: \"\",\r\n      profile_task: {},\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   //const { profile_backlog_id, pt_id } = this.props.match.params;\r\n  //   this.props.getProfileTask(\r\n  //     this.props.profileIdentifier,\r\n  //     this.props.profileSequence,\r\n  //     this.props.history\r\n  //   );\r\n  // }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    if (\r\n      this.props.typeForm === \"Update\" &&\r\n      nextProps.profile_task !== this.state.profile_task\r\n    ) {\r\n      if (nextProps.profile_task) {\r\n        this.setState({ profile_task: nextProps.profile_task });\r\n      }\r\n\r\n      const {\r\n        id,\r\n        profileSequence,\r\n        profileIdentifier,\r\n        start_date,\r\n        end_date,\r\n        months,\r\n        position,\r\n        company,\r\n        generalContext,\r\n        responsibility,\r\n        technicalEnviroment,\r\n        create_At\r\n      } = nextProps.profile_task;\r\n\r\n      if (responsibility){\r\n          this.setState({responsibility: responsibility.sort((a,b) => a.respOrder - b.respOrder)});\r\n      }\r\n      \r\n      this.setState({\r\n        id,\r\n        profileSequence,\r\n        profileIdentifier,\r\n        start_date,\r\n        end_date,\r\n        months,\r\n        position,\r\n        company,\r\n        generalContext,\r\n        responsibility,\r\n        technicalEnviroment,\r\n        create_At\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeText(value) {\r\n    // if (/^\\d+$/.test(e.toString())) {\r\n    //   this.setState({ educYear: e });\r\n    // }\r\n    if (value) {\r\n      if (!/^[0-9]+$/.test(value.toString())) {\r\n        this.setState({ educYear: \"\" });\r\n      } else {\r\n        this.setState({ educYear: value.toString() });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.props.typeForm === \"Add\") {\r\n      // const newTask = {\r\n      //   educYear: this.state.educYear,\r\n      //   educAwarded: this.state.educAwarded,\r\n      //   educOrganization: this.state.educOrganization\r\n      // };\r\n      const newTask = {\r\n        ...this.props,\r\n        //profileStaged: action.payload\r\n        profile: {\r\n          ...this.props.profile,\r\n          start_date: this.state.start_date,\r\n          end_date: this.state.end_date,\r\n          months: this.state.months,\r\n          position: this.state.position,\r\n          company: this.state.company,\r\n          generalContext: this.state.generalContext,\r\n          responsibility: this.state.responsibility,\r\n          technicalEnviroment: this.state.technicalEnviroment,\r\n          taskType: this.props.taskType\r\n        }\r\n      };\r\n\r\n      this.props.addProfileTask(\r\n        this.props.profileIdentifier,\r\n        newTask.profile,\r\n        this.props.history\r\n      );\r\n    } else {\r\n      const UpdateProfileTask = {\r\n        id: this.state.id,\r\n        start_date: this.state.start_date,\r\n        end_date: this.state.end_date,\r\n        months: this.state.months,\r\n        position: this.state.position,\r\n        company: this.state.company,\r\n        generalContext: this.state.generalContext,\r\n        responsibility: this.state.responsibility,\r\n        technicalEnviroment: this.state.technicalEnviroment\r\n      };\r\n\r\n      // console.log(UpdateProfileTask);\r\n      this.props.updateProfileTask(\r\n        this.state.profileIdentifier,\r\n        this.state.profileSequence,\r\n        UpdateProfileTask,\r\n        this.props.history\r\n      );\r\n    }\r\n  }\r\n\r\n  addResponsability() {\r\n    const { responsibility } = this.state;\r\n    // if (this.props.typeForm === \"Update\") {\r\n    //   responsibility = this.props.profile_task.responsibility;\r\n    // }\r\n\r\n    // responsibility.push({\r\n    //   id: responsibility.length,\r\n    //   prompt: \"\",\r\n    //   answer: \"\"\r\n    // });\r\n    //const newResp = { id: responsibility.length, prompt: \"\", answer: \"\" };\r\n    this.setState({\r\n      responsibility: [\r\n        ...responsibility,\r\n        { id: responsibility.length, prompt: \"\", answer: \"\" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  updateResponsabilityPart(event, index, part) {\r\n    const { responsibility } = this.state;\r\n\r\n    responsibility[index][part] = event.target.value;\r\n\r\n    this.setState({ responsibility });\r\n  }\r\n\r\n  addStack() {\r\n    this.props.addStack(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { errors, typeForm, responsibility } = this.props;\r\n    //console.log(\"responsibility\", responsibility);\r\n\r\n    const boardAlgorithm = (errors, responsibility, typeForm) => {\r\n      if (typeof responsibility === \"undefined\" || responsibility.length < 1) {\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              Please add Responsibility (max caracteres: 100)\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            <hr />\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <div className=\"col-6 text-left\">\r\n                    <ControlLabel>Role/function:</ControlLabel>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group col\">\r\n                  <div className=\"col-6 text-left\">\r\n                    <ControlLabel>Activities/Tasks:</ControlLabel>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {this.state.responsibility.map((responsability, index) => {\r\n                return (\r\n                  <div key={responsability.respOrder}>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group col\">\r\n                        <div className=\"col-12 text-left\">\r\n                          <textarea\r\n                            placeholder=\"e.g: Functional & technical analyst\"\r\n                            name=\"respFunction\"\r\n                            value={responsability.respFunction}\r\n                            onChange={event =>\r\n                              this.updateResponsabilityPart(\r\n                                event,\r\n                                index,\r\n                                \"respFunction\"\r\n                              )\r\n                            }\r\n                            className={classnames(\r\n                              \"form-control form-control-lg\",\r\n                              {\r\n                                \"is-invalid\": errors.reponsibility\r\n                              }\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col\">\r\n                        <div className=\"col-12 text-right\">\r\n                          <textarea\r\n                            placeholder=\"Exc.: Write technical analysis for...\"\r\n                            name=\"respTask\"\r\n                            value={responsability.respTask}\r\n                            onChange={event =>\r\n                              this.updateResponsabilityPart(\r\n                                event,\r\n                                index,\r\n                                \"respTask\"\r\n                              )\r\n                            }\r\n                            className={classnames(\r\n                              \"form-control form-control-lg\",\r\n                              {\r\n                                \"is-invalid\": errors.reponsibility\r\n                              }\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div className=\"text-center\">\r\n                {errors.reponsibility && (\r\n                  <div\r\n                    className=\"alert alert-danger\"\r\n                    role=\"alert\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {errors.reponsibility}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/editcv/${this.props.profileIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Edit CV\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                {typeForm} Client/Project\r\n              </h4>\r\n              <div className=\"lead text-center\">\r\n                <hr />\r\n                {this.props.profileSequence && (\r\n                  <span>Client/Project ID: {this.props.profileSequence} </span>\r\n                )}\r\n                {errors.profileNotFound && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {\"Please Check the fields above:\"}\r\n                    <hr />\r\n                    {errors.profileNotFound}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group col\">\r\n                      <h6>Start Date</h6>\r\n                      <input\r\n                        type=\"date\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.datesProject\r\n                        })}\r\n                        name=\"start_date\"\r\n                        value={this.state.start_date}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group col\">\r\n                      <h6>End Date</h6>\r\n                      <input\r\n                        type=\"date\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.datesProject\r\n                        })}\r\n                        name=\"end_date\"\r\n                        value={this.state.end_date}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-12 text-center\">\r\n                      {errors.datesProject && (\r\n                        <div\r\n                          style={{\r\n                            width: \"100%\",\r\n                            marginTop: \".25rem\",\r\n                            fontSize: \"80%\",\r\n                            color: \"#dc3545\"\r\n                          }}\r\n                        >\r\n                          {errors.datesProject}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <h6>Position:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.position\r\n                    })}\r\n                    placeholder=\"Position\"\r\n                    name=\"position\"\r\n                    value={this.state.position}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.position && (\r\n                    <div className=\"invalid-feedback\">{errors.position}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Company:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.company\r\n                    })}\r\n                    placeholder=\"Company\"\r\n                    name=\"company\"\r\n                    value={this.state.company}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.company && (\r\n                    <div className=\"invalid-feedback\">{errors.company}</div>\r\n                  )}\r\n                </div>\r\n                <h6>General Context:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.generalContext\r\n                    })}\r\n                    placeholder=\"General Context\"\r\n                    name=\"generalContext\"\r\n                    value={this.state.generalContext}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.generalContext && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.generalContext}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Responsibility:</h6>\r\n                {boardAlgorithm(errors, this.state.responsibility, typeForm)}\r\n                <hr />\r\n\r\n                <Button\r\n                  caption=\"Add Responsability\"\r\n                  className=\"btn btn-light\"\r\n                  onClick={() => this.addResponsability()}\r\n                >\r\n                  Add Responsability\r\n                </Button>\r\n                <hr />\r\n                <h6>Technical Enviroment:</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.technicalEnviroment\r\n                    })}\r\n                    placeholder=\"Technical Enviroment\"\r\n                    name=\"technicalEnviroment\"\r\n                    value={this.state.technicalEnviroment}\r\n                    // onChange={this.onChange.bind(this)}\r\n                    onChange={this.onChange}\r\n                    style={{\r\n                      marginTop: \"0px\",\r\n                      marginBottom: \"0px\",\r\n                      height: \"100px\"\r\n                    }}\r\n                  />\r\n                  {errors.technicalEnviroment && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.technicalEnviroment}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Save\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nClientProjectForm.propTypes = {\r\n  //getProfileTask: PropTypes.func.isRequired,\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  updateProfileTask: PropTypes.func.isRequired,\r\n  profile_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile_task: state.profileBacklog.profile_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask, updateProfileTask }\r\n)(ClientProjectForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProfileTask } from \"../../../actions/profileBacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport EducationForm from \"./TasksForms/EducationForm\";\r\nimport SkillsForm from \"./TasksForms/SkillsForm\";\r\nimport LanguageForm from \"./TasksForms/LanguageForm\";\r\nimport ClientProjectForm from \"./TasksForms/ClientProjectForm\";\r\n\r\nclass AddProfileTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id, taskType } = this.props.match.params;\r\n\r\n    this.state = {\r\n      taskType: taskType,\r\n      priority: 0,\r\n      profileIdentifier: id,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { id, taskType } = this.props.match.params;\r\n    //const { errors } = this.state;\r\n\r\n    const taskComponent = taskType => {\r\n      if (taskType === \"skill\") {\r\n        return (\r\n          <SkillsForm\r\n            typeForm=\"Add\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={id}\r\n          />\r\n        );\r\n      } else if (taskType === \"educ\") {\r\n        return (\r\n          <EducationForm\r\n            typeForm=\"Add\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={id}\r\n          />\r\n        );\r\n      } else if (taskType === \"lang\") {\r\n        return (\r\n          <LanguageForm\r\n            typeForm=\"Add\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={id}\r\n          />\r\n        );\r\n      } else if (taskType === \"cliPrj\") {\r\n        return (\r\n          <ClientProjectForm\r\n            typeForm=\"Add\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={id}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return <div>{taskComponent(taskType)}</div>;\r\n  }\r\n}\r\n\r\nAddProfileTask.propTypes = {\r\n  addProfileTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  profile: state.profile.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProfileTask }\r\n)(AddProfileTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfileTask } from \"../../../actions/profileBacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport EducationForm from \"./TasksForms/EducationForm\";\r\nimport SkillsForm from \"./TasksForms/SkillsForm\";\r\nimport LanguageForm from \"./TasksForms/LanguageForm\";\r\nimport ClientProjectForm from \"./TasksForms/ClientProjectForm\";\r\n\r\nclass UpdateProfileTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { profile_backlog_id, pt_id, taskType } = this.props.match.params;\r\n\r\n    this.state = {\r\n      taskType: taskType,\r\n      priority: 0,\r\n      profileIdentifier: profile_backlog_id,\r\n      profileSequence: pt_id,\r\n      totalYears: 0,\r\n      profile_task: {},\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //const { profile_backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProfileTask(\r\n      this.state.profileIdentifier,\r\n      this.state.profileSequence,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { profile_backlog_id, pt_id, taskType } = this.props.match.params;\r\n\r\n    const taskComponent = taskType => {\r\n      if (taskType === \"skill\") {\r\n        return (\r\n          <SkillsForm\r\n            typeForm=\"Update\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={profile_backlog_id}\r\n            profileSequence={pt_id}\r\n          />\r\n        );\r\n      } else if (taskType === \"educ\") {\r\n        return (\r\n          <EducationForm\r\n            typeForm=\"Update\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={profile_backlog_id}\r\n            profileSequence={pt_id}\r\n          />\r\n        );\r\n      } else if (taskType === \"lang\") {\r\n        return (\r\n          <LanguageForm\r\n            typeForm=\"Update\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={profile_backlog_id}\r\n            profileSequence={pt_id}\r\n          />\r\n        );\r\n      } else if (taskType === \"cliPrj\") {\r\n        return (\r\n          <ClientProjectForm\r\n            typeForm=\"Update\"\r\n            taskType={taskType}\r\n            history={this.props.history}\r\n            profileIdentifier={profile_backlog_id}\r\n            profileSequence={pt_id}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return <div>{taskComponent(taskType)}</div>;\r\n  }\r\n}\r\n\r\nUpdateProfileTask.propTypes = {\r\n  getProfileTask: PropTypes.func.isRequired,\r\n  profile_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile_task: state.profileBacklog.profile_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileTask }\r\n)(UpdateProfileTask);\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"landing\">\r\n      <div className=\"light-overlay landing-inner text-dark\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 text-center\">\r\n\t\t\t  {/* <h1 className=\"display-3 mb-4\">CV Creator</h1> */}\r\n        {/* <p className=\"lead\">Create your CV</p> */}\r\n\t\t\t  <h1 className=\"display-3 mb-4\">\r\n                Parabéns pela aquisição do e-book, você o receberá por e-mail em breve. Management Tool\r\n              </h1>\r\n              <p className=\"lead\">\r\n                Create your account to join active projects / automation tests or start\r\n                your own\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass InfoProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Automation Tests Management</h1>\r\n                <hr />\r\n                <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                  The Link {id} is Inactive\r\n                </div>\r\n                <hr />\r\n                {errors.candidateEmail && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {errors.candidateEmail}\r\n                    <hr />\r\n                  </div>\r\n                )}\r\n                {errors.tokenMessage && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {errors.tokenMessage}\r\n                    <hr />\r\n                  </div>\r\n                )}\r\n                {errors.profileNotfound && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \".25rem\",\r\n                      fontSize: \"80%\",\r\n                      color: \"#dc3545\"\r\n                    }}\r\n                  >\r\n                    {errors.profileNotfound}\r\n                    <hr />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInfoProfilePage.propTypes = {\r\n  //security: PropTypes.object.isRequired\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  //security: state.security\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps)(InfoProfilePage);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteAutomationTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./automation_task.css\";\r\n\r\nclass AutomationTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteAutomationTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { automation_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (automation_task.priority === 1) {\r\n      priorityClass = \"bg-high text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (automation_task.priority === 2) {\r\n      priorityClass = \"bg-medium text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (automation_task.priority === 3) {\r\n      priorityClass = \"bg-low text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {automation_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{automation_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {automation_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateAutomationTask/${automation_task.projectIdentifier}/${\r\n              automation_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-info ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              automation_task.projectIdentifier,\r\n              automation_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAutomationTask.propTypes = {\r\n  deleteAutomationTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteAutomationTask }\r\n)(AutomationTask);\r\n","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button className=\"btn pink darken-4\" onClick={props.toggle}>\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nclass Message extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { isOpen: false };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((prevState) => ({\r\n      isOpen: !prevState.isOpen,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mg-top\">\r\n        <Button\r\n          name={this.state.isOpen ? 'Hide' : 'Show'}\r\n          toggle={this.toggle}\r\n        />\r\n\r\n        {this.state.isOpen && (\r\n          <div className=\"card-panel pink darken-2\">\r\n            <span className=\"white-text\">\r\n              I am a very simple card. I am good at containing small\r\n              bits of information. I am convenient because I require\r\n              little markup to use effectively. I am similar to what\r\n              is called a panel in other frameworks.\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from 'react';\r\nimport AutomationTask from './AutomationTasks/AutomationTask';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { updateRSocketAutomationTask } from '../../actions/backlogActions';\r\n\r\nimport {\r\n  RSocketClient,\r\n  JsonSerializer,\r\n  IdentitySerializer,\r\n} from 'rsocket-core';\r\nimport RSocketWebSocketClient from 'rsocket-websocket-client';\r\nimport { Flowable, Single } from 'rsocket-flowable';\r\nimport Message from '../controlls/Message';\r\n\r\nlet clientControl = {};\r\n\r\nclass AutomationBacklog extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n      projectIdentifier: '',\r\n      projectSequence: '',\r\n      automation_tasks: {},\r\n      isOpen: false,\r\n      client: null,\r\n    };\r\n    //var intervalLoop = null;\r\n    this.initRsocketWebSocket = this.initRsocketWebSocket.bind(this);\r\n    this.addErrorMessage = this.addErrorMessage.bind(this);\r\n    this.reloadMessages = this.reloadMessages.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.CloseOpenRSockets = this.CloseOpenRSockets.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    //console.log('toggle', this.state.isOpen);\r\n    this.setState((prevState) => ({\r\n      isOpen: !prevState.isOpen,\r\n    }));\r\n  }\r\n\r\n  reloadMessages(data) {\r\n    // console.log('data', data);\r\n    //this.state.automation_tasks.forEach((element) => {\r\n    //if (element.projectSequence === data.projectSequence) {\r\n    //this.toggle();\r\n    //if (data.status == 'FAILLED') {\r\n    //  console.log('data', data);\r\n    //  data.status = 'IN_HOLD';\r\n    this.props.automation_tasks_prop.map((automation_task, i) =>\r\n      automation_task.projectSequence === data.projectSequence &&\r\n      automation_task.status !== data.status\r\n        ? this.props.updateRSocketAutomationTask(data)\r\n        : null,\r\n    );\r\n\r\n    // //console.log('spread', ...this.state.automation_tasks.status);\r\n    // this.setState({\r\n    //   automation_tasks: [...this.state.automation_tasks, data],\r\n    //   //automation_tasks[1]: data,\r\n    // });\r\n    //}\r\n\r\n    // this.setState((nextProps) => ({\r\n    //   automation_tasks: !nextProps.automation_task.props,\r\n    // }));\r\n\r\n    //console.log('Props', this.props);\r\n\r\n    //}\r\n    //});\r\n  }\r\n\r\n  CloseOpenRSockets(automation_tasks_prop) {\r\n    automation_tasks_prop.map((automation_task) =>\r\n      this.initRsocketWebSocket(automation_task.projectSequence),\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevState, nextProps) {\r\n    //console.log('DidUpdate', prevState, nextProps);\r\n    if (\r\n      prevState.automation_tasks_prop &&\r\n      this.state.automation_tasks &&\r\n      prevState.automation_tasks_prop.length > 0 &&\r\n      this.state.automation_tasks.length > 0\r\n    ) {\r\n      if (\r\n        prevState.automation_tasks_prop[0].operationName !==\r\n        this.state.automation_tasks[0].operationName\r\n      ) {\r\n        if (clientControl !== undefined) {\r\n          prevState.automation_tasks_prop.forEach((item, i) => {\r\n            if (clientControl[item.projectSequence]) {\r\n              clientControl[item.projectSequence].close();\r\n            }\r\n          });\r\n          clientControl = {};\r\n          console.log('CloseOpenRSockets');\r\n          this.CloseOpenRSockets(this.state.automation_tasks);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.handleStartRefresh();\r\n    const { automation_tasks_prop } = this.props;\r\n    this.CloseOpenRSockets(automation_tasks_prop);\r\n  }\r\n\r\n  // componentWillUpdate() {\r\n  //   //this.handleStartRefresh();\r\n  //   const { automation_tasks_prop } = this.props;\r\n\r\n  //   this.CloseOpenRSockets(automation_tasks_prop);\r\n  // }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    //console.log(\r\n    //  'getDerived',\r\n    //  nextProps.automation_tasks_prop !== prevState.automation_tasks,\r\n    //);\r\n\r\n    return {\r\n      errors: nextProps.errors,\r\n      projectIdentifier: prevState.projectIdentifier,\r\n      automation_tasks:\r\n        nextProps.automation_tasks_prop !== prevState.automation_tasks\r\n          ? nextProps.automation_tasks_prop\r\n          : prevState.automation_tasks,\r\n    };\r\n  }\r\n\r\n  //use websocket wrapped by rsocket\r\n  initRsocketWebSocket(nameOper) {\r\n    if (clientControl[nameOper] !== undefined) {\r\n      clientControl[nameOper].close();\r\n      //   document.getElementById(\"messages\").innerHTML = \"\";\r\n    }\r\n    // Create an instance of a client\r\n    //nameOper = nameOper.toLowerCase();\r\n    let client = new RSocketClient({\r\n      serializers: {\r\n        data: JsonSerializer,\r\n        metadata: IdentitySerializer,\r\n      },\r\n      setup: {\r\n        // ms btw sending keepalive to server\r\n        keepAlive: 60000,\r\n        // ms timeout if no keepalive response\r\n        lifetime: 180000,\r\n        // format of `data`\r\n        dataMimeType: 'application/json',\r\n        // format of `metadata`\r\n        metadataMimeType: 'message/x.rsocket.routing.v0',\r\n      },\r\n      transport: new RSocketWebSocketClient({\r\n        url: 'ws://localhost:8995/tweetsocket',\r\n      }),\r\n    });\r\n\r\n    clientControl[nameOper] = client;\r\n    //this.setState({ client });\r\n\r\n    // Open the connection\r\n    clientControl[nameOper].connect().subscribe({\r\n      onComplete: (socket) => {\r\n        // socket provides the rsocket interactions fire/forget, request/response,\r\n        // request/stream, etc as well as methods to close the socket.\r\n        // document.getElementById(\"author-filter\").value\r\n        socket\r\n          .requestStream({\r\n            data: {\r\n              projectSequence: nameOper,\r\n            },\r\n            metadata:\r\n              String.fromCharCode('tweets.by.author'.length) +\r\n              'tweets.by.author',\r\n          })\r\n          .subscribe({\r\n            onComplete: () => console.log('complete'),\r\n            onError: (error) => {\r\n              //console.log(error);\r\n              this.addErrorMessage(\r\n                nameOper,\r\n                'Connection has been closed due to ',\r\n                error,\r\n              );\r\n            },\r\n            onNext: (payload) => {\r\n              //console.log(payload.data);\r\n              this.reloadMessages(payload.data);\r\n            },\r\n            onSubscribe: (subscription) => {\r\n              subscription.request(2147483647);\r\n            },\r\n          });\r\n      },\r\n      onError: (error) => {\r\n        //console.log(error);\r\n        this.addErrorMessage(\r\n          nameOper,\r\n          'Connection has been refused due to ',\r\n          error,\r\n        );\r\n      },\r\n      onSubscribe: (cancel) => {\r\n        /* call cancel() to abort */\r\n      },\r\n    });\r\n\r\n    // setInterval(() => {\r\n    //     let that = this;\r\n    //     this.socket && this.socket.requestResponse({\r\n    //         data: '' + (++index),\r\n    //         metadata: 'org.mvnsearch.account.AccountService.findById',\r\n    //     }).subscribe({\r\n    //         onComplete(payload) {\r\n    //             let account = JSON.parse(payload.data);\r\n    //             that.setState({\r\n    //                 nick: account.nick\r\n    //             })\r\n    //         },\r\n    //         onError: (e) => {\r\n    //             console.log('onError', e)\r\n    //         }\r\n    //     });\r\n    // }, 2000)\r\n  }\r\n\r\n  addErrorMessage(nameOper, prefix, error) {\r\n    //console.log(nameOper, prefix);\r\n  }\r\n\r\n  render() {\r\n    // const { automation_tasks_prop } = this.props;\r\n\r\n    const tasks = this.state.automation_tasks.map(\r\n      (automation_task) => (\r\n        <AutomationTask\r\n          key={automation_task.id}\r\n          automation_task={automation_task}\r\n        />\r\n      ),\r\n    );\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.automation_task.status === 'IN_HOLD') {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.automation_task.status === 'FAILLED') {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.automation_task.status === 'SUCCESS') {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Message />\r\n        <hr />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card text-center mb-2\">\r\n                <div className=\"card-header bg-in-hold text-white\">\r\n                  <h3>In Hold</h3>\r\n                </div>\r\n              </div>\r\n              {todoItems}\r\n              {\r\n                // insert tasks here\r\n              }\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card text-center mb-2\">\r\n                <div className=\"card-header bg-failled text-white\">\r\n                  <h3>Failled</h3>\r\n                </div>\r\n              </div>\r\n              {inProgressItems}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card text-center mb-2\">\r\n                <div className=\"card-header bg-success text-white\">\r\n                  <h3>Success</h3>\r\n                </div>\r\n              </div>\r\n              {doneItems}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAutomationBacklog.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  updateRSocketAutomationTask: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateRSocketAutomationTask,\r\n})(AutomationBacklog);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AutomationBacklog from './AutomationBacklog';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  getAllOperationByBackLog,\r\n  getAutomationTaskByOperation,\r\n} from '../../actions/backlogActions';\r\nimport Select from 'react-select';\r\nimport {\r\n  // camelCase,\r\n  capitalCase,\r\n  //  constantCase,\r\n  //  dotCase,\r\n  //  headerCase,\r\n  //  noCase,\r\n  //  paramCase,\r\n  //  pascalCase,\r\n  //  pathCase,\r\n  //  sentenceCase,\r\n  //  snakeCase\r\n} from 'change-case';\r\n\r\nconst prices = [961.7442, 8963.1259, 8961.5466, 8959.3715, 8954.2278];\r\nconst normalised_prices = [\r\n  12.40342549423265,\r\n  12.111408873991664,\r\n  12.445187442672605,\r\n  12.904885894352674,\r\n  13.991985763740644,\r\n];\r\n\r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' },\r\n];\r\n\r\nclass AutomationBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n      projectIdentifier: '',\r\n      selectedOption: {},\r\n      all_operations: {},\r\n      operations: [{ message: 'Select' }],\r\n      automation_tasks: {},\r\n    };\r\n    //var intervalLoop = null;\r\n    this.handleStartRefresh = this.handleStartRefresh.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const selectedOptionLocal = JSON.parse(localStorage.getItem(\"selectedOption\"));\r\n    // if (!selectedOptionLocal) {\r\n    //   localStorage.setItem(\"selectedOption\", JSON.stringify(this.state.selectedOption));\r\n    // }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    this.setState({ projectIdentifier: id });\r\n\r\n    this.props.getAllOperationByBackLog(id);\r\n    //this.props.getBacklogAutomationTask(id);\r\n\r\n    //this.handleStartRefresh();\r\n\r\n    //const { automation_tasks_prop } = this.props;\r\n\r\n    //this.CloseOpenRSockets(automation_tasks_prop);\r\n  }\r\n\r\n  // componentDidUpdate(prevState) {\r\n  //   console.log(prevState);\r\n  // }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    // if (nextProps.all_operations !== prevState.all_operations) {\r\n    //    this.setState({ all_operations: nextProps.all_operations });\r\n    //  }\r\n    // const { id } = this.props.match.params;\r\n    // //this.setState({projectIdentifier:id});\r\n\r\n    // this.props.getAllOperationByBackLog(id);\r\n\r\n    const selectedOptionLocal = JSON.parse(\r\n      localStorage.getItem('selectedOption'),\r\n    );\r\n\r\n    // if (selectedOption  && typeof selectedOption  !== \"undefined\") {\r\n    //   this.setState({ selectedOption });\r\n    // }\r\n    if (selectedOptionLocal) {\r\n      return {\r\n        errors: nextProps.errors,\r\n        projectIdentifier: prevState.projectIdentifier,\r\n        selectedOption:\r\n          selectedOptionLocal.value !== prevState.selectedOption.value\r\n            ? selectedOptionLocal\r\n            : prevState.selectedOption,\r\n        all_operations:\r\n          nextProps.backlog.all_operations !==\r\n          prevState.all_operations\r\n            ? nextProps.backlog.all_operations\r\n            : prevState.all_operations,\r\n        // automation_tasks:\r\n        //   nextProps.automation_tasks_prop !==\r\n        //   prevState.automation_tasks\r\n        //     ? nextProps.automation_tasks_prop\r\n        //     : prevState.automation_tasks,\r\n      };\r\n    } else {\r\n      // Return null to indicate no change to state.\r\n      return null;\r\n    }\r\n  }\r\n\r\n  handleStartRefresh() {\r\n    if (this.state.selectedOption != null) {\r\n      this.intervalLoop = setInterval(\r\n        () =>\r\n          this.setState((prevState) => {\r\n            //if (prevState.count === 0) return null;\r\n            this.props.getAutomationTaskByOperation(\r\n              this.state.projectIdentifier,\r\n              this.state.selectedOption.value,\r\n            );\r\n            console.log(\r\n              'Refreshing Task for: ' +\r\n                this.state.selectedOption.value,\r\n            );\r\n            //console.log(prevState.count);\r\n            //return {\r\n            //    count: prevState.count - 1,\r\n            //};\r\n          }),\r\n        2000,\r\n      );\r\n    }\r\n  }\r\n\r\n  // need to cleanup the timeinterval whenever we destroy the component\r\n  // componentWillUnmount() {\r\n  //   clearInterval(this.intervalLoop);\r\n  // }\r\n\r\n  onReloadDataClick(backlog_id, operationName) {\r\n    this.props.getAutomationTaskByOperation(\r\n      backlog_id,\r\n      operationName,\r\n    );\r\n\r\n    // const { automation_tasks_prop } = this.props;\r\n\r\n    // this.CloseOpenRSockets(automation_tasks_prop);\r\n  }\r\n\r\n  handleChange = (selectedOption) => {\r\n    // this.setState({ selectedOption }, () =>\r\n    //   console.log(`Option selected:`, this.state.selectedOption),\r\n    // );\r\n    this.props.getAutomationTaskByOperation(\r\n      this.state.projectIdentifier,\r\n      selectedOption.value,\r\n    );\r\n    localStorage.setItem(\r\n      'selectedOption',\r\n      JSON.stringify(selectedOption),\r\n    );\r\n    // //this.handleStartRefresh();\r\n    // this.initRsocketWebSocket(selectedOption.value);\r\n  };\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.errors) {\r\n  //     this.setState({ errors: nextProps.errors });\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { automation_tasks, all_operations } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER CHECK\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div\r\n              className=\"alert alert-danger text-center\"\r\n              role=\"alert\"\r\n            >\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div\r\n              className=\"alert alert-danger text-center\"\r\n              role=\"alert\"\r\n            >\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div\r\n              className=\"alert alert-info text-center\"\r\n              role=\"alert\"\r\n            >\r\n              No Automation Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return (\r\n          <AutomationBacklog\r\n            automation_tasks_prop={automation_tasks}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, automation_tasks);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <Link\r\n                to={`/addAutomationTask/${id}`}\r\n                className=\"btn btn-primary mb-3\"\r\n              >\r\n                <i className=\"fas fa-plus-circle\">\r\n                  {' '}\r\n                  Create Automation Task\r\n                </i>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Link\r\n                to={`/automationGridBoard/${id}`}\r\n                className=\"btn btn-info\"\r\n              >\r\n                <i className=\"fas fa-plus-circle\">\r\n                  {' '}\r\n                  Automation Grid Board{' '}\r\n                </i>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-4\">{/* <AppCom/> */}</div>\r\n          </div>\r\n          <br />\r\n          <hr />\r\n          <h1 id=\"title\">\r\n            {automation_tasks.length > 0 &&\r\n              automation_tasks[0].projectIdentifier}\r\n          </h1>\r\n          <hr />\r\n          {automation_tasks.length > 0 && (\r\n            <>\r\n              <div id=\"operation\">Operation Selected:</div>\r\n\r\n              <div id=\"operation\">\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{camelCase(automation_tasks[0].operationName)}</button> */}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-primary\"\r\n                  onClick={this.onReloadDataClick.bind(\r\n                    this,\r\n                    automation_tasks[0].projectIdentifier,\r\n                    automation_tasks[0].operationName,\r\n                  )}\r\n                >\r\n                  {capitalCase(automation_tasks[0].operationName)}\r\n                </button>\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{constantCase(automation_tasks[0].operationName)}</button> */}\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{dotCase(automation_tasks[0].operationName)}</button> */}\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{headerCase(automation_tasks[0].operationName)}</button> */}\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{noCase(automation_tasks[0].operationName)}</button> */}\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{paramCase(automation_tasks[0].operationName)}</button> */}\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{pascalCase(automation_tasks[0].operationName)}</button> */}\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{pathCase(automation_tasks[0].operationName)}</button> */}\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{sentenceCase(automation_tasks[0].operationName)}</button> */}\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\">{snakeCase(automation_tasks[0].operationName)}</button> */}\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className=\"form-group\">\r\n            <h6>Operation / Resource :</h6>\r\n            <Select\r\n              value={this.state.selectedOption}\r\n              onChange={this.handleChange}\r\n              options={all_operations}\r\n              clearable={true}\r\n            />\r\n            {errors.selectedOption && (\r\n              <div\r\n                style={{\r\n                  width: '100%',\r\n                  marginTop: '.25rem',\r\n                  fontSize: '80%',\r\n                  color: '#dc3545',\r\n                }}\r\n              >\r\n                {errors.selectedOption}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {BoardContent}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAutomationBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getAllOperationByBackLog: PropTypes.func.isRequired,\r\n  getAutomationTaskByOperation: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAllOperationByBackLog,\r\n  getAutomationTaskByOperation,\r\n})(AutomationBoard);\r\n","import React, {Component, expandWindow , compressWindow} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass FloatingWindowControl extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   // this.state = {\r\n  //   //   expandWindow: false,\r\n  //   //   compressWindow: false\r\n  //   // };\r\n  // }\r\n  \r\n    render() {\r\n      return (\r\n        <span className=\"window-control\">\r\n          <i className=\"icon minus\"></i>\r\n          <i className=\"icon expand\" onClick={this.props.expandWindow}></i>\r\n          <i className=\"icon remove\"></i>\r\n        </span>\r\n      );\r\n    }  \r\n  }\r\n\r\n  FloatingWindowControl.propTypes = {\r\n    expandWindow: PropTypes.func,\r\n    compressWindow: PropTypes.func,\r\n   };\r\n  \r\n  const mapStateToProps = state => ({\r\n    expandWindow: state.expandWindow,\r\n    compressWindow: state.compressWindow,\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { expandWindow, compressWindow  }\r\n  )(FloatingWindowControl);\r\n  \r\n  ","import React, {Component, expandWindow , compressWindow} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport FloatingWindowControl from './FloatingWindowControl';\r\n\r\nclass FloatingWindowHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      expandWindow: true,\r\n      compressWindow: true\r\n    };\r\n  }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"window-header\">\r\n          <span className=\"window-title\">Window title</span>\r\n          <FloatingWindowControl \r\n            expandWindow={this.state.expandWindow}\r\n            compressWindow={this.state.compressWindow}\r\n            />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n  FloatingWindowHeader.propTypes = {\r\n    expandWindow: PropTypes.func,\r\n    compressWindow: PropTypes.func,\r\n   };\r\n  \r\n  const mapStateToProps = state => ({\r\n    expandWindow: state.expandWindow,\r\n    compressWindow: state.compressWindow,\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { expandWindow, compressWindow  }\r\n  )(FloatingWindowHeader);\r\n  \r\n  ","import React, { Component } from \"react\";\r\n\r\nclass FloatingWindowContent extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"window-content\">Status Response</div>\r\n      );\r\n    }  \r\n  }\r\n\r\n  export default FloatingWindowContent;","import React, { Component } from \"react\";\r\n\r\n\r\nclass FloatingWindowStatusBar extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"window-statusbar\">\r\n          <span className=\"window-status\">Status bar</span>\r\n          <span className=\"window-resize-control\">\r\n            <i className=\"icon maximize\"></i>\r\n          </span>\r\n        </div>\r\n      );\r\n    }  \r\n  }\r\n\r\n  export default FloatingWindowStatusBar;","import React, { Component } from \"react\";\r\nimport '../AutomationBoard/css/float-windows.css';\r\n\r\nimport FloatingWindowHeader from './FloatingWindowHeader';\r\nimport FloatingWindowContent from './FloatingWindowContent';\r\nimport FloatingWindowStatusBar from './FloatingWindowStatusBar';\r\n\r\nclass FloatingWindow extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"window\">\r\n          <FloatingWindowHeader />\r\n          <FloatingWindowContent />\r\n          <FloatingWindowStatusBar />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default FloatingWindow;","import React, { Component } from \"react\";\r\nimport AutomationTask from \"./AutomationTasks/AutomationTask\";\r\nimport CreateButton from \"../controlls/CreateButton\";\r\nimport FloatingWindow from \"../controlls/FloatingWindow\";\r\n//import DraggableComp from \"../controlls/DraggableComp\";\r\nimport { disputeAutomationTask,generateExpectedFields } from \"../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport '../AutomationBoard/css/grid_backlog.css';\r\n\r\n//import DraggableComp from 'react-draggable'; // The default\r\n//import {DraggableCore} from 'react-draggable'; // <DraggableCore>\r\n//import Draggable, {DraggableCore} from 'react-draggable'; // Both at the same time\r\n \r\n\r\n//import Square from \"../../components/controlls/Square\";\r\n\r\n// import \"react-bootstrap/dist/react-bootstrap.min.js\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { Grid, Row, Col } from \"react-bootstrap\";\r\nimport {\r\n  // camelCase,\r\n  // capitalCase,\r\n  // constantCase,\r\n  // dotCase,\r\n  // headerCase,\r\n  // noCase,\r\n  // paramCase,\r\n  pascalCase,\r\n  // pathCase,\r\n  // sentenceCase,\r\n  // snakeCase\r\n} from \"change-case\";\r\n\r\n\r\nclass AutomationGridBacklog extends Component {\r\n \r\n  onGenerateExpectedClick(operation_name, tokenTag) {\r\n      // expectedObject[`#ExpectedToken#.${tokenTag}`] = `${fieldName}.${valueResponse}`;\r\n      const expectedObject = {};\r\n      // This It Accepts Multiple Values in the same Line\r\n      // Special Case of its Algorithm\r\n      expectedObject[`#ExpectedToken#.${tokenTag}`] = `code.999,status.Gathering Responses,message.Change IT`;\r\n      \r\n      this.props.generateExpectedFields(operation_name, expectedObject);\r\n    }\r\n\r\n    onDisputeClick(backlog_id, pt_id, operation_name, tokenTag, fieldName, valueResponse) {\r\n      this.props.disputeAutomationTask(backlog_id, pt_id, operation_name, tokenTag, fieldName, valueResponse);\r\n    }\r\n\r\n\r\n    getParsedDate(date){\r\n      date = String(date).split(' ');\r\n      return String(date[0])\r\n      // var days = String(date[0]).split('-');\r\n      // var hours = String(date[1]).split(':');\r\n      // //console.log([parseInt(days[0]), parseInt(days[1])-1, parseInt(days[2]), parseInt(hours[0]), parseInt(hours[1]), parseInt(hours[2])])\r\n      // return [parseInt(days[0]),\"-\", parseInt(days[1]),\"-\",parseInt(days[2]), parseInt(hours[0]), parseInt(hours[1]), parseInt(hours[2])];\r\n    }\r\n\r\n    getParsedTime(date){\r\n      date = String(date).split(' ');\r\n      return String(date[1]);\r\n      //console.log([parseInt(days[0]), parseInt(days[1])-1, parseInt(days[2]), parseInt(hours[0]), parseInt(hours[1]), parseInt(hours[2])])\r\n      //return [parseInt(hours[0]),\":\", parseInt(hours[1]),,\":\", parseInt(hours[2])];\r\n    }\r\n\r\n\r\n  render() {\r\n    const { automation_tasks_prop } = this.props;\r\n    \r\n    const tasks = automation_tasks_prop.map(automation_task => (\r\n      <AutomationTask key={automation_task.id} automation_task={automation_task} />\r\n    ));\r\n\r\n    //var date = new Date(\"2016-01-04 10:34:23\");\r\n    //var formattedDate = format(date, \"MMMM Do, yyyy H:mma\");\r\n    //console.log(formattedDate);\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n    let allTestCases = [];\r\n    \r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      allTestCases.push(automation_tasks_prop[i]);\r\n      if (tasks[i].props.automation_task.status === \"IN_HOLD\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.automation_task.status === \"FAILLED\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.automation_task.status === \"SUCCESS\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    if (allTestCases){\r\n      allTestCases = allTestCases.sort((a,b) => a.orderTest - b.orderTest);\r\n    }\r\n    \r\n    let RenderHeaderGrid;\r\n    let RenderDataGrid\r\n    // let RenderColGrp\r\n\r\n\r\n    // const renderColGrp = (renderHeaderGrid) => {\r\n    //   //let header = Object.keys(this.state.students[0])\r\n    //   var firstElem = true;\r\n    //   return renderHeaderGrid.map((key, index) => {\r\n    //     if (firstElem) {\r\n    //       firstElem = false;\r\n    //       return <col/>;\r\n    //     }else{\r\n    //       return <col/>;\r\n    //     }\r\n    //   })\r\n    // }\r\n\r\n    const renderTableHeader = (firstAutoTask) => {\r\n      //let header = Object.keys(this.state.students[0])\r\n      //let header = Object.keys(firstAutoTask[0])\r\n      let header = [];\r\n      \r\n      //header.push(\"bodyResponse\");\r\n      header.push(\"testCaseName\");\r\n      header.push(\"projectSequence\");\r\n      header.push(\"tokenTag\");\r\n      header.push(\"fieldName\");\r\n      header.push(\"expectedValue\");\r\n      header.push(\"valueResponse\");\r\n      header.push(\"succeeded\");\r\n      header.push(\"priority\");\r\n      header.push(\"dueDate\");\r\n      header.push(\"update_At\");\r\n      header.push(\"In Hold\")\r\n      header.push(\"Failled\")\r\n      header.push(\"Success\")\r\n      header.push(\"Reset-Expected\")\r\n      header.push(\"orderTest\");\r\n      header.push(\"Dispute\")\r\n      \r\n      return header.map((key, index) => {\r\n          if (key !== \"id\") {  \r\n            if (key === \"testCaseName\"){\r\n              return <th key={index} className=\"test-case-name\">\r\n                      {pascalCase(key)}\r\n                     </th>\r\n              {/* <div className=\"container\" style = {{ marginLeft: 15 }}> */}\r\n            }else{\r\n              return <th key={index}>{pascalCase(key)}</th>\r\n            }\r\n          }else{\r\n           return null;    \r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    \r\n    const statusPriority = (priority) => {\r\n      //PROJECT IDENTIFIER CHECK\r\n      if (priority === 1) {\r\n        return (\r\n          // <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          <div className=\"border border-high text-light\">HIGH</div>\r\n        );\r\n      } else if (priority === 2) {\r\n        return (\r\n          // <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          <div className=\"border border-medium text-light\">MEDIUM</div>\r\n        );\r\n      } if (priority === 3) {\r\n        return (\r\n          // <div className=\"alert alert-info text-center\" role=\"alert\">\r\n          <div className=\"border border-low text-light\">LOW</div>\r\n        );\r\n      }\r\n  }\r\n\r\n   const statusEmpty = (status) => {\r\n      return (\r\n      // <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n      <CreateButton\r\n          link=\"#\"\r\n          caption=\"      X      \"\r\n          cssClass=\"btn btn-light\"\r\n        />\r\n      );\r\n   }\r\n\r\n   const spanStatusEmpty = (status) => {\r\n    return (\r\n    // <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n    <div className=\"border border-empty text-light\">XXXXXXXX</div>\r\n    );\r\n }\r\n  \r\n    const statusAlgorithm = (status) => {\r\n      //PROJECT IDENTIFIER CHECK\r\n      if (status === \"IN_HOLD\") {\r\n        return (\r\n          // <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n            <CreateButton\r\n                      link=\"#\"\r\n                      caption={status}\r\n                      cssClass=\"btn btn-in-hold-task text-white ml-4\"\r\n                      />\r\n        );\r\n      } else if (status === \"FAILLED\") {\r\n        return (\r\n          // <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          <CreateButton\r\n          link=\"#\"\r\n          caption={status}\r\n          cssClass=\"btn btn-failled-task text-white ml-4\"\r\n          />  \r\n        );\r\n      } if (status === \"SUCCESS\") {\r\n        return (\r\n          // <div className=\"alert alert-info text-center\" role=\"alert\">\r\n          <CreateButton\r\n                link=\"#\"\r\n                caption={status}\r\n                cssClass=\"btn btn-success-task text-white ml-4\"\r\n              />       \r\n        );\r\n      }\r\n     else {\r\n      return (\r\n      // <div className=\"alert alert-info text-center\" role=\"alert\">\r\n      // <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n      <td><CreateButton\r\n          link=\"#\"\r\n          caption=\"      X      \"\r\n          cssClass=\"btn btn-light\"\r\n        />\r\n        </td>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\n const renderTableData = (allCases) => {\r\n        //return this.state.students.map((student, index) => {\r\n        {/* <div className=\"container\" style = {{ marginLeft: 15 }}> */}\r\n          \r\n    return  allCases.map((testCases, index) => {\r\n\t\t   const {id, projectIdentifier, projectSequence, status, priority, dueDate, testCaseName, bodyResponse, update_At, operationName, tokenTag, fieldName, expectedValue, valueResponse, orderTest, succeeded} = testCases //destructuring\r\n       return (\r\n            <tr key={id} className=\"other-cols\">\r\n            <td className=\"test-case-name\"><div className=\"fill-td\">{testCaseName}</div></td>\r\n            <td>{projectSequence}</td>\r\n            <td className=\"test-case-name\"><div className=\"fill-td\">{tokenTag}</div></td>\r\n            <td>{fieldName}</td>\r\n            <td>{expectedValue}</td>\r\n            <td>{valueResponse}</td>\r\n            <td>{!succeeded && (\r\n                  \"NO\"\r\n                  )||\"Yes\"}</td>\r\n            <td className=\"td-some-cols\"><div className=\"fill-center\">{statusPriority(priority)}</div></td>    \r\n            <td>{dueDate}</td>\r\n            <td style = {{ width: 80 }}>{update_At && (<>{this.getParsedDate(update_At)}<br/>{this.getParsedTime(update_At)}</>)}</td>\r\n            <td className=\"td-some-cols\">{status===\"IN_HOLD\" && (\r\n                  statusAlgorithm(status)\r\n                  )||spanStatusEmpty()}</td>    \r\n            <td className=\"td-some-cols\">{status===\"FAILLED\" && (\r\n                  statusAlgorithm(status)\r\n                  )||spanStatusEmpty()}</td>          \r\n            <td className=\"td-some-cols\">{status===\"SUCCESS\" && (\r\n                  statusAlgorithm(status)\r\n                  )||spanStatusEmpty()}</td>\r\n            <td>          \r\n            <button\r\n            className=\"btn btn-warning ml-4\"\r\n            onClick={this.onGenerateExpectedClick.bind(\r\n              this,\r\n              operationName, \r\n              tokenTag\r\n            )}\r\n          >\r\n            Reset\r\n          </button></td> \r\n          <td>{orderTest}</td>\r\n         <td>          \r\n            <button\r\n            className=\"btn btn-info ml-4\"\r\n            onClick={this.onDisputeClick.bind(\r\n              this,\r\n              projectIdentifier,\r\n              projectSequence,\r\n              operationName, \r\n              tokenTag,\r\n              fieldName,\r\n              valueResponse\r\n            )}\r\n          >\r\n            Dispute\r\n          </button></td>           \r\n            </tr>\r\n            \r\n          )\r\n        })\r\n    }\r\n  \r\n\r\n    RenderHeaderGrid = renderTableHeader(allTestCases);\r\n    RenderDataGrid = renderTableData(allTestCases);\r\n    //RenderColGrp = renderColGrp(RenderHeaderGrid);\r\n\r\n\r\n    return (\r\n         <>\r\n         <FloatingWindow></FloatingWindow>\r\n           <ScrollToBottom>\r\n             <table id='automation' className=\"fixed\">\r\n               {/* <colgroup>\r\n                  {RenderColGrp}             \r\n               </colgroup> */}\r\n             <thead>\r\n             <tr>{RenderHeaderGrid}</tr>\r\n             </thead>  \r\n             <tbody>\r\n                 {RenderDataGrid}\r\n             </tbody>\r\n             <tfoot>\r\n               <tr>{RenderHeaderGrid}</tr>\r\n             </tfoot>\r\n             </table>\r\n          </ScrollToBottom>   \r\n         </>\r\n         \r\n     );\r\n  }\r\n}\r\n\r\nAutomationGridBacklog.propTypes = {\r\n  disputeAutomationTask: PropTypes.func.isRequired,\r\n  generateExpectedFields: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { disputeAutomationTask, generateExpectedFields }\r\n)(AutomationGridBacklog);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AutomationGridBacklog from \"./AutomationGridBacklog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {  getAllOperationByBackLog, getAutomationTaskByOperation  } from \"../../actions/backlogActions\";\r\nimport \"../AutomationBoard/css/grid_automation.css\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  // camelCase,\r\n   capitalCase,\r\n  //  constantCase,\r\n  //  dotCase,\r\n  //  headerCase,\r\n  //  noCase,\r\n  //  paramCase,\r\n  //  pascalCase,\r\n  //  pathCase,\r\n  //  sentenceCase,\r\n  //  snakeCase\r\n} from \"change-case\";\r\n\r\n// const options = [\r\n//   { value: 'chocolate', label: 'Chocolate' },\r\n//   { value: 'strawberry', label: 'Strawberry' },\r\n//   { value: 'vanilla', label: 'Vanilla' },\r\n// ];\r\n\r\nclass AutomationGridBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n      projectIdentifier:\"\",\r\n      selectedOption: {},\r\n      all_operations:{},\r\n      count : 25\r\n    };\r\n    //var intervalLoop = null; \r\n    this.handleStartRefresh = this.handleStartRefresh.bind(this);\r\n  }\r\n  \r\n  handleStartRefresh() {\r\n    if (this.state.selectedOption != null) {\r\n    this.intervalLoop = setInterval(() => this.setState(prevState => {  \r\n        //if (prevState.count === 0) return null;\r\n        this.props.getAutomationTaskByOperation(this.state.projectIdentifier, this.state.selectedOption.value);\r\n        console.log('Refreshing Task for: ' + this.state.selectedOption.value);\r\n        //console.log(prevState.count);\r\n        //return {\r\n        //    count: prevState.count - 1,\r\n        //};  \r\n      }\r\n \r\n        ), 2000);\r\n    }\r\n  }\r\n\r\n    // need to cleanup the timeinterval whenever we destroy the component\r\ncomponentWillUnmount(){\r\n  clearInterval(this.intervalLoop)\r\n  }\r\n  \r\n  onReloadDataClick(backlog_id, operationName) {\r\n    this.props.getAutomationTaskByOperation(backlog_id, operationName);\r\n  }\r\n\r\n\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption },\r\n      () => console.log(`Option selected:`, this.state.selectedOption) );\r\n      this.props.getAutomationTaskByOperation(this.state.projectIdentifier, selectedOption.value);\r\n      localStorage.setItem(\"selectedOption\", JSON.stringify(selectedOption));\r\n      //this.handleStartRefresh();\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.setState({projectIdentifier:id});\r\n    this.props.getAllOperationByBackLog(id);\r\n    \r\n    //this.handleStartRefresh();\r\n\r\n\r\n    //this.props.getBacklogAutomationTask(id);\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.errors) {\r\n  //     this.setState({ errors: nextProps.errors });\r\n  //   }\r\n  // }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    \r\n    const selectedOptionLocal = JSON.parse(localStorage.getItem(\"selectedOption\"));   \r\n    \r\n    return {\r\n      errors: nextProps.errors,\r\n      projectIdentifier:prevState.projectIdentifier,\r\n      selectedOption:selectedOptionLocal !== prevState.selectedOption? selectedOptionLocal : prevState.selectedOption,\r\n      all_operations: nextProps.backlog.all_operations !== prevState.all_operations? nextProps.backlog.all_operations : prevState.all_operations\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { automation_tasks, all_operations } = this.props.backlog;\r\n    const { errors} = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER CHECK\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                    {errors.projectNotFound}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                    {errors.projectIdentifier}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                    No Automation Tasks on this board\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <AutomationGridBacklog automation_tasks_prop={automation_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, automation_tasks);\r\n\r\n    let allTestCases = [];\r\n    for (let i = 0; i < automation_tasks.length; i++) {\r\n      //allTestCases.push(automation_tasks[i].props.automation_task);\r\n      allTestCases.push(automation_tasks[i]);\r\n    }\r\n\r\n    BoardContent = boardAlgorithm(errors, automation_tasks);\r\n\r\n    return (\r\n      <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Link to={`/addAutomationTask/${id}`} className=\"btn btn-primary mb-3\">\r\n              <i className=\"fas fa-plus-circle\"> Create Automation Task</i>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <Link to={`/automationBoard/${id}`} className=\"btn btn-info\">\r\n              <i className=\"fas fa-plus-circle\"> Automation Board </i>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <hr />\r\n        <h1 id='title'>{automation_tasks.length > 0 && (automation_tasks[0].projectIdentifier)}</h1>\r\n        <hr/>\r\n        {automation_tasks.length > 0 && (\r\n          <>\r\n          <div id='operation'>Operation Selected:</div>\r\n\r\n          <div id='operation'>\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{camelCase(automation_tasks[0].operationName)}</button> */}\r\n          <button type=\"button\" className=\"btn btn-outline-primary\"\r\n            onClick={this.onReloadDataClick.bind(\r\n              this,\r\n              automation_tasks[0].projectIdentifier,\r\n              automation_tasks[0].operationName \r\n            )}\r\n          >{capitalCase(automation_tasks[0].operationName)}</button>\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{constantCase(automation_tasks[0].operationName)}</button> */}\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{dotCase(automation_tasks[0].operationName)}</button> */}\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{headerCase(automation_tasks[0].operationName)}</button> */}\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{noCase(automation_tasks[0].operationName)}</button> */}\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{paramCase(automation_tasks[0].operationName)}</button> */}\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{pascalCase(automation_tasks[0].operationName)}</button> */}\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{pathCase(automation_tasks[0].operationName)}</button> */}\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{sentenceCase(automation_tasks[0].operationName)}</button> */}\r\n          {/* <button type=\"button\" class=\"btn btn-outline-primary\">{snakeCase(automation_tasks[0].operationName)}</button> */}\r\n          </div>\r\n          </>)}\r\n        <div className=\"form-group\">\r\n        <h6>Operation / Resource :</h6>\r\n          <Select\r\n              value={this.state.selectedOption}\r\n              onChange={this.handleChange}\r\n              options={all_operations}\r\n              clearable={true}\r\n            />          \r\n          {errors.selectedOption && (\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                marginTop: \".25rem\",\r\n                fontSize: \"80%\",\r\n                color: \"#dc3545\"\r\n              }}\r\n            >\r\n              {errors.selectedOption}\r\n            </div>\r\n          )}\r\n      </div>\r\n      </div>\r\n      {BoardContent}\r\n      </>\r\n        );\r\n  }\r\n}\r\n\r\n\r\nAutomationGridBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getAllOperationByBackLog: PropTypes.func.isRequired,\r\n  getAutomationTaskByOperation: PropTypes.func.isRequired\r\n};\r\n \r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {  getAllOperationByBackLog, getAutomationTaskByOperation  }\r\n)(AutomationGridBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addAutomationTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddAutomationTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addAutomationTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/automationBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Automation Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Automation Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Identifier: {this.state.projectIdentifier}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Automation Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"IN_HOLD\">IN HOLD</option>\r\n                    <option value=\"FAILLED\">FAILLED</option>\r\n                    <option value=\"SUCCESS\">SUCCESS</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddAutomationTask.propTypes = {\r\n  addAutomationTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addAutomationTask }\r\n)(AddAutomationTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getAutomationTask,\r\n  updateAutomationTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateAutomationTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getAutomationTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.automation_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateAutomationTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateAutomationTask);\r\n    this.props.updateAutomationTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateAutomationTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/automationBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Automation Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Automation Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Automation Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Automation Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"IN_HOLD\">IN HOLD</option>\r\n                    <option value=\"FAILLED\">FAILLED</option>\r\n                    <option value=\"SUCCESS\">SUCCESS</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateAutomationTask.propTypes = {\r\n  getAutomationTask: PropTypes.func.isRequired,\r\n  automation_task: PropTypes.object.isRequired,\r\n  updateAutomationTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  automation_task: state.backlog.automation_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getAutomationTask, updateAutomationTask }\r\n)(UpdateAutomationTask);\r\n","import React, { useState , useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './Join.css';\r\n\r\nconst SignIn = props => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(\r\n      () => props.dispatch({ type: \"CHANGE_QUOTE\" }),\r\n      5000\r\n    );\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  return (\r\n    <div className=\"joinOuterContainer\">\r\n      <div className=\"joinInnerContainer\">\r\n        <h1 className=\"heading\">Join</h1>\r\n        <div>\r\n          <input placeholder=\"Name\" className=\"joinInput\" type=\"text\" onChange={(event) => setName(event.target.value)} />\r\n        </div>\r\n        <div>\r\n          <input placeholder=\"Room\" className=\"joinInput mt-20\" type=\"text\" onChange={(event) => setRoom(event.target.value)} />\r\n        </div>\r\n        <Link onClick={e => (!name || !room) ? e.preventDefault() : null} to={`/chat?name=${name}&room=${room}`}>\r\n          <button className={'button mt-20'} type=\"submit\">Sign In</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  quote: state.quote\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignIn);","import React, { useState, useEffect } from 'react';\r\n\r\nconst Timer = () => {\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  function toggle() {\r\n    setIsActive(!isActive);\r\n  }\r\n\r\n  function reset() {\r\n    setSeconds(0);\r\n    setIsActive(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setSeconds(seconds => seconds + 1);\r\n      }, 1000);\r\n    } else if (!isActive && seconds !== 0) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive, seconds]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"time\">\r\n        {seconds}s\r\n      </div>\r\n      <div className=\"row\">\r\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\r\n          {isActive ? 'Pause' : 'Start'}\r\n        </button>\r\n        <button className=\"button\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;","import React from \"react\";\r\n\r\n//Break Label\r\nfunction BreakLabel() {\r\n        return <p id=\"break-label\"> Break Length </p>\r\n    }\r\n\r\n//Session Label\r\nfunction SessionLabel() {\r\n    return <p id=\"session-label\"> Session Length </p>\r\n}\r\n\r\nclass Pomodoro extends React.Component{\r\n    constructor(props){\r\n        super(props) \r\n                this.state = {\r\n                    break : 5,\r\n                    session : 25,\r\n                    count : 25,\r\n                }\r\n        this.handleClickBreakDecrement = this.handleClickBreakDecrement.bind(this);\r\n        this.handleClickBreakIncrement = this.handleClickBreakIncrement.bind(this);\r\n        this.handleClickSessionDecrement = this.handleClickSessionDecrement.bind(this);\r\n        this.handleClickSessionIncrement = this.handleClickSessionIncrement.bind(this);\r\n        this.handleStartStop = this.handleStartStop.bind(this);\r\n    }\r\n    \r\n    handleClickBreakDecrement() {\r\n        this.setState({\r\n            break : this.state.break - 1\r\n        })\r\n    }\r\n    \r\n    handleClickSessionDecrement() {\r\n        this.setState({\r\n            session : this.state.session - 1 ,\r\n            count : this.state.count - 1\r\n        })\r\n    }\r\n    \r\n    handleClickBreakIncrement() {\r\n        this.setState({\r\n            break: this.state.break +1\r\n        })\r\n    }\r\n    \r\n     handleClickSessionIncrement() {\r\n        this.setState({\r\n            session : this.state.session + 1 ,\r\n            count : this.state.count + 1\r\n        })\r\n    }\r\n    \r\n    handleStartStop() {\r\n    this.timer = setInterval(() => this.setState(prevState => {  \r\n        if (prevState.count === 0) return null;\r\n\r\n        return {\r\n            count: prevState.count - 1,\r\n        };\r\n        }\r\n        ), 1000);\r\n    }\r\n    \r\n    handleReset(){\r\n        \r\n    }\r\n    \r\n    render(){\r\n        \r\n        let count; \r\n        \r\n        if(this.state.count % 60 >= 10) {\r\n            count = Math.floor(this.state.count /60)+\":\"+this.state.count%60\r\n          }\r\n        \r\n        \r\n        return (\r\n                <div>\r\n            \r\n              {/* Break Label */}\r\n        <div className=\"breakContainer\">\r\n                <BreakLabel />\r\n            <div className=\"breakButton\">\r\n                <button id=\"break-decrement\" onClick={this.handleClickBreakDecrement}>\r\n                    handleClickBreakDecrement\r\n                </button>\r\n                <p id=\"break-length\"> {this.state.break} </p>\r\n                <button id=\"break-increment\" onClick={this.handleClickBreakIncrement}>           handleClickBreakIncrement\r\n                </button>\r\n            </div> \r\n        </div> \r\n                \r\n                {/* Session Label */}\r\n        <div className=\"sessionContainer\">\r\n                <SessionLabel />\r\n            <div className=\"sessionButton\">\r\n                <button id=\"session-decrement\" onClick={this.handleClickSessionDecrement}>\r\n                    handleClickSessionDecrement\r\n                </button>\r\n                <p id=\"session-length\"> {this.state.session} </p>\r\n                <button id=\"session-increment\" onClick={this.handleClickSessionIncrement}>\r\n                    handleClickSessionIncrement\r\n                </button>\r\n            </div>\r\n        </div>\r\n                \r\n                {/* Timer Label */}\r\n                <div>\r\n                    <p id=\"timer-label\"> Session</p>\r\n                    <p id=\"time-left\">\r\n                    {count}\r\n                    </p>\r\n                </div>\r\n                \r\n                {/* Start, Stop and Reset Button*/}\r\n                <div>\r\n                <button id=\"start_stop\" onClick={this.handleStartStop}>\r\n                    Start/Stop\r\n                </button>\r\n                \r\n                <button id=\"reset\" onClick={this.handleReset}>\r\n                    Reset\r\n                </button>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default Pomodoro;","import React, {Component} from 'react';\r\nimport Draggable from 'react-draggable'; // The default\r\nimport './draggable.css';\r\n\r\nclass DraggableSample extends Component {\r\n  state = {\r\n    activeDrags: 0,\r\n    deltaPosition: {\r\n      x: 0, y: 0\r\n    },\r\n    controlledPosition: {\r\n      x: -400, y: 200\r\n    }\r\n  };\r\n\r\n  handleDrag = (e, ui) => {\r\n    const {x, y} = this.state.deltaPosition;\r\n    this.setState({\r\n      deltaPosition: {\r\n        x: x + ui.deltaX,\r\n        y: y + ui.deltaY,\r\n      }\r\n    });\r\n  };\r\n\r\n  onStart = () => {\r\n    this.setState({activeDrags: ++this.state.activeDrags});\r\n  };\r\n\r\n  onStop = () => {\r\n    this.setState({activeDrags: --this.state.activeDrags});\r\n  };\r\n\r\n  // For controlled component\r\n  adjustXPos = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const {x, y} = this.state.controlledPosition;\r\n    this.setState({controlledPosition: {x: x - 10, y}});\r\n  };\r\n\r\n  adjustYPos = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const {controlledPosition} = this.state;\r\n    const {x, y} = controlledPosition;\r\n    this.setState({controlledPosition: {x, y: y - 10}});\r\n  };\r\n\r\n  onControlledDrag = (e, position) => {\r\n    const {x, y} = position;\r\n    this.setState({controlledPosition: {x, y}});\r\n  };\r\n\r\n  onControlledDragStop = (e, position) => {\r\n    this.onControlledDrag(e, position);\r\n    this.onStop();\r\n  };\r\n\r\n  render() {\r\n    const dragHandlers = {onStart: this.onStart, onStop: this.onStop};\r\n    const {deltaPosition, controlledPosition} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>React Draggable</h1>\r\n        <p>Active DragHandlers: {this.state.activeDrags}</p>\r\n        <p>\r\n          <a href=\"https://github.com/mzabriskie/react-draggable/blob/master/example/index.html\">Demo Source</a>\r\n        </p>\r\n        <Draggable {...dragHandlers}>\r\n          <div className=\"box\">I can be dragged anywhere</div>\r\n        </Draggable>\r\n        <Draggable axis=\"x\" {...dragHandlers}>\r\n          <div className=\"box cursor-x\">I can only be dragged horizonally (x axis)</div>\r\n        </Draggable>\r\n        <Draggable axis=\"y\" {...dragHandlers}>\r\n          <div className=\"box cursor-y\">I can only be dragged vertically (y axis)</div>\r\n        </Draggable>\r\n        <Draggable onStart={() => false}>\r\n          <div className=\"box\">I don't want to be dragged</div>\r\n        </Draggable>\r\n        <Draggable onDrag={this.handleDrag} {...dragHandlers}>\r\n          <div className=\"box\">\r\n            <div>I track my deltas</div>\r\n            <div>x: {deltaPosition.x.toFixed(0)}, y: {deltaPosition.y.toFixed(0)}</div>\r\n          </div>\r\n        </Draggable>\r\n        <Draggable handle=\"strong\" {...dragHandlers}>\r\n          <div className=\"box no-cursor\">\r\n            <strong className=\"cursor\"><div>Drag here</div></strong>\r\n            <div>You must click my handle to drag me</div>\r\n          </div>\r\n        </Draggable>\r\n        <Draggable cancel=\"strong\" {...dragHandlers}>\r\n          <div className=\"box\">\r\n            <strong className=\"no-cursor\">Can't drag here</strong>\r\n            <div>Dragging here works</div>\r\n          </div>\r\n        </Draggable>\r\n        <Draggable grid={[25, 25]} {...dragHandlers}>\r\n          <div className=\"box\">I snap to a 25 x 25 grid</div>\r\n        </Draggable>\r\n        <Draggable grid={[50, 50]} {...dragHandlers}>\r\n          <div className=\"box\">I snap to a 50 x 50 grid</div>\r\n        </Draggable>\r\n        <Draggable bounds={{top: -100, left: -100, right: 100, bottom: 100}} {...dragHandlers}>\r\n          <div className=\"box\">I can only be moved 100px in any direction.</div>\r\n        </Draggable>\r\n        <div className=\"box\" style={{height: '500px', width: '500px', position: 'relative', overflow: 'auto', padding: '0'}}>\r\n          <div style={{height: '1000px', width: '1000px', padding: '10px'}}>\r\n            <Draggable bounds=\"parent\" {...dragHandlers}>\r\n              <div className=\"box\">\r\n                I can only be moved within my offsetParent.<br /><br />\r\n                Both parent padding and child margin work properly.\r\n              </div>\r\n            </Draggable>\r\n            <Draggable bounds=\"parent\" {...dragHandlers}>\r\n              <div className=\"box\">\r\n                I also can only be moved within my offsetParent.<br /><br />\r\n                Both parent padding and child margin work properly.\r\n              </div>\r\n            </Draggable>\r\n          </div>\r\n        </div>\r\n        <Draggable bounds=\"body\" {...dragHandlers}>\r\n          <div className=\"box\">\r\n            I can only be moved within the confines of the body element.\r\n          </div>\r\n        </Draggable>\r\n        <Draggable {...dragHandlers}>\r\n          <div className=\"box\" style={{position: 'absolute', bottom: '100px', right: '100px'}}>\r\n            I already have an absolute position.\r\n          </div>\r\n        </Draggable>\r\n        <Draggable defaultPosition={{x: 25, y: 25}} {...dragHandlers}>\r\n          <div className=\"box\">\r\n            {\"I have a default position of {x: 25, y: 25}, so I'm slightly offset.\"}\r\n          </div>\r\n        </Draggable>\r\n        <Draggable positionOffset={{x: '-10%', y: '-10%'}} {...dragHandlers}>\r\n          <div className=\"box\">\r\n            {'I have a default position based on percents {x: \\'-10%\\', y: \\'-10%\\'}, so I\\'m slightly offset.'}\r\n          </div>\r\n        </Draggable>\r\n        <Draggable position={controlledPosition} {...dragHandlers} onDrag={this.onControlledDrag}>\r\n          <div className=\"box\">\r\n            My position can be changed programmatically. <br />\r\n            I have a drag handler to sync state.\r\n            <p>\r\n              <a href=\"#\" onClick={this.adjustXPos}>Adjust x ({controlledPosition.x})</a>\r\n            </p>\r\n            <p>\r\n              <a href=\"#\" onClick={this.adjustYPos}>Adjust y ({controlledPosition.y})</a>\r\n            </p>\r\n          </div>\r\n        </Draggable>\r\n        <Draggable position={controlledPosition} {...dragHandlers} onStop={this.onControlledDragStop}>\r\n          <div className=\"box\">\r\n            My position can be changed programmatically. <br />\r\n            I have a dragStop handler to sync state.\r\n            <p>\r\n              <a href=\"#\" onClick={this.adjustXPos}>Adjust x ({controlledPosition.x})</a>\r\n            </p>\r\n            <p>\r\n              <a href=\"#\" onClick={this.adjustYPos}>Adjust y ({controlledPosition.y})</a>\r\n            </p>\r\n          </div>\r\n        </Draggable>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DraggableSample;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { setJWTToken, setJWTTokenCandidate } from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\r\nimport AllProfiles from \"./components/Profile/AllProfiles\";\r\nimport AddProfile from \"./components/Profile/AddProfile\";\r\nimport UpdateProfile from \"./components/Profile/UpdateProfile\";\r\nimport CVBoard from \"./components/CVBoard/CVBoard\";\r\nimport AddProfileTask from \"./components/CVBoard/ProfileTasks/AddProfileTask\";\r\nimport UpdateProfileTask from \"./components/CVBoard/ProfileTasks/UpdateProfileTask\";\r\nimport Home from \"./components/Layout/Home\";\r\nimport InfoProfilePage from \"./components/Profile/InfoProfilePage\";\r\n//import AutomationTests  from \"./components/AutomationTests/AutomationTests\";\r\nimport AutomationBoard  from \"./components/AutomationBoard/AutomationBoard\";\r\nimport AutomationGridBoard  from \"./components/AutomationBoard/AutomationGridBoard\";\r\nimport AddAutomationTask from \"./components/AutomationBoard/AutomationTasks/AddAutomationTask\";\r\nimport UpdateAutomationTask from \"./components/AutomationBoard/AutomationTasks/UpdateAutomationTask\";\r\n// Chat with Socket io\r\nimport Chat from \"./components/ChatBoard/Chat/Chat\";\r\nimport Join from \"./components/ChatBoard/Join/Join\";\r\n\r\n//import QuoteChanger from \"./components/TimerTest/QuoteChanger\";\r\nimport Timer from \"./components/TimerTest/Timer\";\r\nimport Pomodoro from \"./components/TimerTest/Pomodoro\";\r\nimport DraggableSamples from \"./components/controlls/DraggableSamples\";\r\n\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\nconst jwtTokenCandidate = localStorage.jwtTokenCandidate;\r\n\r\nif (jwtToken && typeof jwtToken !== \"undefined\") {\r\n  setJWTToken(jwtToken);\r\n}\r\n\r\nif (jwtTokenCandidate && typeof jwtTokenCandidate !== \"undefined\") {\r\n  setJWTTokenCandidate(jwtTokenCandidate);\r\n}\r\n\r\nif (\r\n  typeof jwtToken !== \"undefined\" ||\r\n  typeof jwtTokenCandidate !== \"undefined\"\r\n) {\r\n  const token = jwtToken || jwtTokenCandidate;\r\n  const decoded_jwtToken = jwt_decode(token);\r\n\r\n  //Only for Normal jwtToken\r\n  if (jwtToken) {\r\n    store.dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded_jwtToken\r\n    });\r\n  }\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              //Public Routes\r\n            }\r\n\r\n            <Route exact path=\"/chat\" component={Chat} />\r\n            <Route exact path=\"/joinChat\" component={Join} />\r\n            <Route exact path=\"/draggable\" component={DraggableSamples} />\r\n            <Route exact path=\"/timer\" component={Timer} />\r\n            <Route exact path=\"/pomodoro\" component={Pomodoro} />\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/infoPage/:id\" component={InfoProfilePage} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/editcv/:id\" component={CVBoard} />\r\n            <Route exact path=\"/addProfileTask/:id/:taskType\" component={AddProfileTask} />\r\n            <Route exact path=\"/updateProfileTask/:profile_backlog_id/:pt_id/:taskType\" component={UpdateProfileTask} />\r\n\r\n            <Route exact path=\"/automationBoard/:id\" component={AutomationBoard} />\r\n            <Route exact path=\"/automationGridBoard/:id\" component={AutomationGridBoard} />\r\n            <Route exact path=\"/addAutomationTask/:id\" component={AddAutomationTask} />\r\n            <Route exact path=\"/updateAutomationTask/:backlog_id/:pt_id\" component={UpdateAutomationTask} />\r\n\r\n            {\r\n              //Private Routes\r\n            }\r\n            <Switch>\r\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecuredRoute exact path=\"/profiles\" component={AllProfiles} />\r\n              <SecuredRoute exact path=\"/addProfile\" component={AddProfile} />\r\n              <SecuredRoute exact path=\"/home\" component={Home} />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProfile/:id\"\r\n                component={UpdateProfile}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProject/:id\"\r\n                component={UpdateProject}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/projectBoard/:id\"\r\n                component={ProjectBoard}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/addProjectTask/:id\"\r\n                component={AddProjectTask}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n                component={UpdateProjectTask}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n//import registerServiceWorker from \"./registerServiceWorker\";\r\n//import LocalServiceWorkerRegister from \"./sw\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// LocalServiceWorkerRegister();\r\n\r\n// //registerServiceWorker;\r\n// if (\"serviceWorker\" in navigator) {\r\n//   window.addEventListener(\"load\", function() {\r\n//     navigator.serviceWorker.register(LocalServiceWorkerRegister).then(\r\n//       function(registration) {\r\n//         // Registration was successful\r\n//         console.log(\r\n//           \"ServiceWorker registration successful with scope: \",\r\n//           registration.scope\r\n//         );\r\n//       },\r\n//       function(err) {\r\n//         // registration failed :(\r\n//         console.log(\"ServiceWorker registration failed: \", err);\r\n//       }\r\n//     );\r\n//   });\r\n// }\r\n"],"sourceRoot":""}